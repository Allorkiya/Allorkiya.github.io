<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习计划</title>
    <url>/2022-02-25-%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh,there's something wrong.Check and try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="057072b981e0382d4ab9e524b7d52d5677f9adef327485dd6737984cda2a3a53">c9ac946bdcd35abb1e0b339829e1571a06f95107405a517dc7e6f7e5e0d1f580be0806f4bd04a2e6104e38279157433296b3697ff5b844e88e00858cc8d5bcaf2a473a3c26d9883e71ce4cd630ce537a331ba111f34d94d4176a4387ddae36c5959dcf1be29fa4a410b898fdcb3c2321d888a4bf2a9c136f832ad5c2b2700d474b703e8734bdd3ba71245f8a494eeab34b26e0079663f1b181640d75a9e5efcd13e9a10edb0dcc2e1721877d2194d53f72fe1772369a1fec5cf705cf8a5b1a95d9d37e502f8cc5b411117bb073c38c9e5639e8c2ad4952b3e5e55eb45555399f8b0547e12b60070b2184e3f04e5ce3b12b5f18a296a5d137d750106fdaadee02a22e1f6214b9f30f575a7934eeb79053cf415576ffa41484c195cabe0035d1c40bb9408be9e3fb1694b5b8c0e967de3c0b06593559763ebe0dd06216509627ce912ea40673ada6aca2010585dc3c81c17767db98ebaf3b96b7f01644a3a6606d02c07c21e6cc584f9e98b3272189588e9e00573f655d9a6e0a448f2ba971cdde5f4c8205450f74cced96cfd1560d4c70b1622a7f6272b719d6d08d832f7120a0473af1ba85a8a8b6587c9f1259790f2ae479d1c2fa97530f7e048b2c31e74e56e13a831279eecd1a46e03452f7dcf51580abf8881ffe62d7211d62d92e4fd395e22682559900cbf845f45906865b2644d1f234763ee4af1c8b61e88d3c575420686eac67fa978b810cee0be3c16998e6a723ae07907af1bfda0e2271fb37906de83280a5430faa715638750249b57dba7cfdfa603a87804413dd310317141d5fcb4c1889d1c555fd911e08565a9781d67815cf5ce7d8d792fafce7f615c6db79d71b130eb1355480c9d089f49819a240751d47ad9994b97066bf9fa00c10b189a4e57f0e77b29d52e66db36cb4103b8db811d95ed455beacee1dcb0da1dea077dbac80047f85baf014e1655eeb57df5e117d5dc21fd786f1b20ff63b07f6697b65dc09f32e3086baeb32a02cf3a9c49a5dfc322ac1bb8e44a9506aa97854b83106650430f46bab27ee34f28d43a6313edf63413fe184297b99018993a736f092d5c35bdbb194706027b5b11e650c0304e2198c5ab539f9852a6b7a45ef7087a4fa16f686408c484032e07a50ff07ef5bc1167c48dbdedc4f79c35e670b74a95a9dd0fdffe3403045d38b67bc41a1ca0d453b5b067d8e126bb2f983402471952fbe184752b1951436034ebf4c2c32a78495c550b22775afab278c89d6337649f47073c6cdd08804ea8bd4958e575813fa889206b96fd0e4e0fe241e6e0d037e04ddae9467a23d62fca5b3d940700fe6effd42aa33113e0576492aa7cf7afd0d5c6537e8fcf86bd4c184b9c0e00ec20ad55d5f01dcf017ec6cc549ea96f821092a4800b17989702d812ebbfa86e5e5434faa401bafb63ec884bd6819782e1f9885f3b9d29f8edb2f1901c271143a5430245cb9dea8207c9ac314e3fa55dd5c9e8488ccf76581208a2ef4b6332c33c8526037585bc01c6f9b69a09270f010e3334a83802d2820041a526e2c5a58e6cf709b9f0025c7fe0660ae1b166a1ab761d0aa70407f6d806016b8ffff245ca9ef8ce26915decfa966a84d5165bd1287955a887e281458e3173540c9855c42bcce6fbea6491be21b6ead54d36e08d9d08e43e7552605c078eed1385b3ee4d35e818bccdd522fb1317f9c1d128caeb65a343118dc4ffb649f3430ecaaeb5a4c01247b6f63dfa6b5e60b79467196e42f7d344979f9c8ab9a296e26691baf2405b84d48be1709cd78ab0b7c6dae2d2a09d94aac51df0c06c2333bc794a53b9a8a6bdd25a0dfbb096ff9a8657fcb76da57a7052aea22df6d73485061c0c54eef49796d1d14cd863b43220132738553d01194429da3c4680c0bd6504460435add67fccd162eb691123a0c90e137a931ad08d77e5ae03bce5e13b7c560fecd7d55d07fe4ab2bdd7b031cf013306e752fd86327e78f21af02bf7293214007a75823ff247f8314eeb183ddf15bc4a25c40f9839e5a1e52227330354d2de350d13aec4465be86a855894abfd496babfe107d1de98c4c73150411bb46f5b71350b848c37765dcf237af8ee89927b9b9189e1cb3a3e1c7b171e799541d69152e9ae28cc39a669daf682991a7b2f642cf7c104546e5e377d4829428a91b43329932ac3f199581859009ecd2a19bd12c33677c80557576b0ae7c304c16678715df30169be1284aaee7baecec808ee6c35b85d30fa4b74815a79dfaad3acab2394c49ef9f2e2cf0ea6cb46faa12b1beb4ebc38125f371d3c46d95410e238ebb32ac8e18733eb2c5c87752be62ccaf5ad48f26e10baee01ba9553fd9da6c501b5f0e83c89514a387ba1f10e20a4a64c6fd79c0e41de05ebae822fff1437f70a5104b0b8a8ee375c4f71d427a070a815b55ee04f57a76dcf809b75e60c16383335502b38d92ac7c3077f47ac167d52207d6acc9f47e129cfdb96211be81c8cf7bc1e50e76840c9914ed6b63480cf89f5a9dd39ff91a6d66c7c25e2eae3696b5b388005fa0262224e15150657d145f22d6ceec3b75f798813e8466517cc97bdbbffe94d0ee3fb6f44d471f9f1b2b055a0db246cf90531840e0740e31c5a12a0309c9694bc7bae190f4759629f1eb893f0591b5c11364b76b9f86389459a9abd4ac158325f8f43cb77027e27b07fe063c495e7a6e378ddcece105c01e30607d07d19b428b1a0c59b9f704fc7c3215ffe8d53591face8d542770897292a6cd7faa22aa61b702f6dec1e7d6d03518533c459811cb4a99dfc73320ee1eb3a0eb8c6cfc1790567d0b8e4d67167db7b2a23e084d4b7a746cb26ebdac5353f563111af1db61baad0fd0221aab8f192c49e91c1df2b7e3adbed6c62967bdd34d4c81080fbc36feac197cb99ff687b31d54e9fa155a44e3ba3cc5cddd8a840bb978ced2a4399e416d2ea9f3fb8d292aea4ae721a95d8d92b9c02118c09c75467ab99c9f83e643dc6b9ffb8fd4e131e54235e0ff77e711c76535f0760f1a8f3e7f7ef5dff7210c7e377e87b5724b18b97aead6daac06d1dd55b4c273c6459194d6a5bfe87e9332f6b8fbe39d0bce0bd1bfbccde621f1ff30aec77efb9f588e910294b69a8b4ede68c5b195925f8841263142a5608d85fa7f9418cac29fe775b6061e773e180400ac3315b48089e95983f2d62d7e128aa7adc8a5454c719794d4ce2bcf3415b18b03bf838fd2a4fb83d418d6ad29058fc5314d58fab4fe3fc13d61a6f2220bbd10c4d808c06dc4bf59003249398f8301907c8f1d70f778e79e0718e73f69dd3da2cb657321e72b00e66f7b42261ef2629a51f0a3f9e0153e31081b02ad3f1c2e15e8bbf59242fe17d71e578de85ac10d00ae5eae0e8445a24ce03df47b460f5eab41dbffc053a88925dcf05df6c82f3b17fd1acbe84700165198659eece361cee980eb00419f1badaf534354ae5f9f4b2c5a5142284baae058f4a052355f53fb9d034802f1467d1e7fc6c13f825e0b69e3f19e93135079704da5305c908382aee6529cc55be5a85b9bddb0d90ec856c13245c3d52bb1c5c1da11e615010714faa15e81c2cf0b90860f89ddbb03bdb3fefa5838d235378f7604578a4717056c5c118f656b5b1f0b0c214f37eebe36c333bb232175c52f9731720ab647f423f37b20d2f4ead361d7e237edd3cebb367b07fdcc282d430d2edc05c1d598c7185a64d0562477cf6530dee34af90a46f1fbf58901671da9749100d5b7158b58f97e4b0ac40543a222247f23ee48743a06b46c63fbb018aa0ef2bb4b4c28096ff850139f25b8e618170dffc975bd8060340aa99cdd0aba5dfd63757da1d6c4794bc2b6e65544914f7c61df80aa27a762e71618764e3c65a08469a6e264fb3b41adb5ea504543ed1957da2378696805098c5d77efb3e826aceeffcb1a6cd69524084cd88b08f95f2edc89432c6129cc4336c12e5c361a1730ff64cf159e2fe23e4dcd62e5db6982e6f5871f3a21c8458ac3f18fb4f3634f353d489f5caa54721f4db80672514df7dddc2b1924c0dd25fec4d95c9a0538d2011e9310d8bd056619a7a9e68c81617335ac0e21a536994f8d5b9ff20d16762cc1a9f5ec2b3cfaf6c5d3aa109a5b28bcd1bb48be91bfc669361ca825ef3370fe5a4f7823cb3ba2908fe98ab6273288d33d68397dd155402594e67694612d6802dbcf554457a3317ad815cde64fad68fcf65fc3744e78648cd05e21e0da48b4512a54a04ea7578ae7197fe2b7631023639dc0250d15548c49ee89e6fb8e010b92c72de96cdda8a052c17692b43c45fafb22965124c08d55cf4abf743506e4b2689032d24b4bc03c538d35eeb550f78972f16a5dcfff018cc90085064a6742f0fa592cddf4413c70673bf769c6ef5d82ce703c1425897149512c9765a6bfcd5707923a3ecfc9fcf8a68d34aa950824ba26fb67b052b5e3cf95988497a51917bbc3ea01449d303be01d01ba0f3fafc3e369a4481eae2960d3d494fa8520f87110c5b8fdcfc0cf06c575881e0b4d18240d07b3c17b6bccecabb7617eaf3edbc0f5222514b410f79f03160b2709dd713aeb7a67b4e4546a3d59835b8d9709c8318b1f559bccf6f96e8</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>2022 Namomo-Camp 每日一题</title>
    <url>/2022-02-25-2022-Namomo-Camp-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98.html</url>
    <content><![CDATA[<h1 id="Namomo-Camp"><a href="#Namomo-Camp" class="headerlink" title="Namomo Camp"></a><center>Namomo Camp</center></h1><span id="more"></span>
<h2 id="Day1：子串的最大差"><a href="#Day1：子串的最大差" class="headerlink" title="Day1：子串的最大差"></a>Day1：子串的最大差</h2><p>链接：<a href="http://oj.daimayuan.top/course/10/problem/436">传送门</a></p>
<h3 id="题意简述："><a href="#题意简述：" class="headerlink" title="题意简述："></a>题意简述：</h3><p>求长度为$n$的序列所有连续子区间的最大值和最小值差的和。</p>
<h3 id="范围"><a href="#范围" class="headerlink" title="范围:"></a>范围:</h3><p>$n \leq 5 \times 10^5,a_i \leq 10^8$</p>
<h3 id="解法："><a href="#解法：" class="headerlink" title="解法："></a>解法：</h3><script type="math/tex; mode=display">
\sum\limits_{s \in sub_{seq}} Max - Min = \sum Max - \sum Min</script><p>因此只需要算出每个点在多少个区间里有贡献，加和即可。</p>
<p>对于每个点$a_i$维护：</p>
<ul>
<li>区间最大值是$a_i$的区间最左端</li>
<li>区间最大值是$a_i$的区间最右端</li>
<li>包含的区间</li>
</ul>
<p>线段树维护即可（或者单调栈）。</p>
<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> mxp[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> mnp[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> mx[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> mn[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(mx[ch] &gt; mx[ch + <span class="number">1</span>]) &#123;</span><br><span class="line">        mx[rt] = mx[ch];</span><br><span class="line">        mxp[rt] = mxp[ch];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        mx[rt] = mx[ch + <span class="number">1</span>];</span><br><span class="line">        mxp[rt] = mxp[ch + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(mn[ch] &lt; mn[ch + <span class="number">1</span>]) &#123;</span><br><span class="line">        mn[rt] = mn[ch];</span><br><span class="line">        mnp[rt] = mnp[ch];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        mn[rt] = mn[ch + <span class="number">1</span>];</span><br><span class="line">        mnp[rt] = mnp[ch + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        mx[rt] = mn[rt] = a[l];</span><br><span class="line">        mxp[rt] = mnp[rt] = l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,ch);</span><br><span class="line">    <span class="built_in">build</span>(mid + <span class="number">1</span>,r,ch + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qry_mxp</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> rt,<span class="type">int</span> ql,<span class="type">int</span> qr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= l <span class="keyword">and</span> r &lt;= qr) &#123;</span><br><span class="line">        <span class="keyword">return</span> mxp[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ans = -INF;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ansp;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= mid) &#123;</span><br><span class="line">        <span class="type">int</span> p = <span class="built_in">qry_mxp</span>(l,mid,ch,ql,qr);</span><br><span class="line">        <span class="keyword">if</span>(a[p] &gt; ans) ans = a[p],ansp = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(qr &gt; mid) &#123;</span><br><span class="line">        <span class="type">int</span> p = <span class="built_in">qry_mxp</span>(mid + <span class="number">1</span>,r,ch + <span class="number">1</span>,ql,qr);</span><br><span class="line">        <span class="keyword">if</span>(a[p] &gt; ans) ans = a[p],ansp = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ansp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qry_mnp</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> rt,<span class="type">int</span> ql,<span class="type">int</span> qr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= l <span class="keyword">and</span> r &lt;= qr) &#123;</span><br><span class="line">        <span class="keyword">return</span> mnp[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ans = INF;</span><br><span class="line">    <span class="type">int</span> ansp;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= mid) &#123;</span><br><span class="line">        <span class="type">int</span> p = <span class="built_in">qry_mnp</span>(l,mid,ch,ql,qr);</span><br><span class="line">        <span class="keyword">if</span>(a[p] &lt; ans) ans = a[p],ansp = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(qr &gt; mid) &#123;</span><br><span class="line">        <span class="type">int</span> p = <span class="built_in">qry_mnp</span>(mid + <span class="number">1</span>,r,ch + <span class="number">1</span>,ql,qr);</span><br><span class="line">        <span class="keyword">if</span>(a[p] &lt; ans) ans = a[p],ansp = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ansp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt; r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> a[l];</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ansp;</span><br><span class="line">    <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">        ansp = <span class="built_in">qry_mxp</span>(<span class="number">1</span>,n,<span class="number">1</span>,l,r);</span><br><span class="line">    &#125;<span class="keyword">else</span> ansp = <span class="built_in">qry_mnp</span>(<span class="number">1</span>,n,<span class="number">1</span>,l,r);</span><br><span class="line">    ans = a[ansp] * <span class="number">1ll</span> * (ansp - l + <span class="number">1</span>) * (r - ansp + <span class="number">1</span>);</span><br><span class="line">    ans += <span class="built_in">query</span>(l,ansp - <span class="number">1</span>,op);</span><br><span class="line">    ans += <span class="built_in">query</span>(ansp + <span class="number">1</span>,r,op);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>) - <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day2：no-crossing"><a href="#Day2：no-crossing" class="headerlink" title="Day2：no crossing"></a>Day2：no crossing</h2><p>链接：<a href="http://oj.daimayuan.top/problem/437">传送门</a></p>
<h3 id="题意简述"><a href="#题意简述" class="headerlink" title="题意简述"></a>题意简述</h3><p>给定$n$个节点，$m$条边的图，求恰好经过$k$个点的最短路径，并且每次选的边不能经过之前经过的节点。</p>
<h3 id="范围："><a href="#范围：" class="headerlink" title="范围："></a>范围：</h3><p>$1 \leq n,k \leq 100,0 \leq m \leq 2000$</p>
<h3 id="解法：-1"><a href="#解法：-1" class="headerlink" title="解法："></a>解法：</h3><p>$f[now][j][k][0/1]$表示当前状态可以去的节点是$[j,k]$，当前在左端点或右端点，类似于区间dp转移即可。</p>
<h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][N][N][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> d[N][N];</span><br><span class="line"><span class="type">int</span> n,k,m;</span><br><span class="line"><span class="type">int</span> ans = INF;</span><br><span class="line"><span class="type">int</span> now;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k &gt;&gt; m;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">    <span class="keyword">while</span>(m --) &#123;</span><br><span class="line">        <span class="type">int</span> u,v,w;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        d[u][v] = <span class="built_in">min</span>(d[u][v],w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(f[<span class="number">0</span>],<span class="number">0x3f</span>,<span class="keyword">sizeof</span> f[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        f[<span class="number">0</span>][<span class="number">0</span>][i][<span class="number">1</span>] = f[<span class="number">0</span>][i][n + <span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(-- k) &#123;</span><br><span class="line">        now ^= <span class="number">1</span>;<span class="built_in">memset</span>(f[now],<span class="number">0x3f</span>,<span class="keyword">sizeof</span> f[now]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i ++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">2</span>;j &lt;= n + <span class="number">1</span>; j ++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> l = i + <span class="number">1</span>;l &lt; j;l ++) &#123;</span><br><span class="line">                    f[now][i][l][<span class="number">1</span>] = <span class="built_in">min</span>(f[now][i][l][<span class="number">1</span>],<span class="built_in">min</span>(f[!now][i][j][<span class="number">1</span>] + d[j][l],f[!now][i][j][<span class="number">0</span>] + d[i][l]));</span><br><span class="line">                    f[now][l][j][<span class="number">0</span>] = <span class="built_in">min</span>(f[now][l][j][<span class="number">0</span>],<span class="built_in">min</span>(f[!now][i][j][<span class="number">0</span>] + d[i][l],f[!now][i][j][<span class="number">1</span>] + d[j][l]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= n + <span class="number">1</span>;i ++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt;= n + <span class="number">1</span>;j ++) &#123;</span><br><span class="line">            <span class="comment">//cout &lt;&lt; &quot;#:&quot; &lt;&lt; f[now][i][j][0] &lt;&lt; &#x27; &#x27; &lt;&lt; f[now][i][j][1] &lt;&lt; endl;</span></span><br><span class="line">            ans = <span class="built_in">min</span> (ans,<span class="built_in">min</span>(f[now][i][j][<span class="number">0</span>],f[now][i][j][<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; (ans &gt; (INF / <span class="number">2</span>) ? <span class="number">-1</span> : ans) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day3：Dis"><a href="#Day3：Dis" class="headerlink" title="Day3：Dis"></a>Day3：Dis</h2><p>链接：<a href="http://oj.daimayuan.top/problem/451">传送门</a></p>
<h3 id="题意简述：-1"><a href="#题意简述：-1" class="headerlink" title="题意简述："></a>题意简述：</h3><p>求树上两点间简单路径的点值异或和。</p>
<h3 id="范围：-1"><a href="#范围：-1" class="headerlink" title="范围："></a>范围：</h3><p>$n \leq 10^5$</p>
<h3 id="解法：-2"><a href="#解法：-2" class="headerlink" title="解法："></a>解法：</h3><p>啊我天，写的时候犯了病，开始把调试信息打上去了结果TLE，然后疯狂找错，最后重新敲了一下。。</p>
<p>就是一个很简单的记录树上前缀异或和，询问为：</p>
<script type="math/tex; mode=display">
ans = xr_x \; xor \; xr_y \; xor \; val[lca(x,y)]</script><h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span>  <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][<span class="number">23</span>];</span><br><span class="line"><span class="type">int</span> xr[N];</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; v[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> dep[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    dep[x] = dep[fa] + <span class="number">1</span>;</span><br><span class="line">    xr[x] ^= xr[fa];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y == fa) <span class="keyword">continue</span>;</span><br><span class="line">        f[y][<span class="number">0</span>] = x;</span><br><span class="line">        <span class="built_in">dfs</span>(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x] &lt; dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">20</span>;i &gt;= <span class="number">0</span>; i --) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dep[f[x][i]] &gt;= dep[y]) x = f[x][i];</span><br><span class="line">        <span class="keyword">if</span>(x == y) <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">20</span>;i &gt;= <span class="number">0</span>;i --) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[x][i] != f[y][i]) &#123;</span><br><span class="line">            x = f[x][i];</span><br><span class="line">            y = f[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        xr[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; n;i ++) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        v[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        v[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">22</span>;j ++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">            f[i][j] = f[f[i][j - <span class="number">1</span>]][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(m --) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,xr[x] ^ xr[y] ^ a[<span class="built_in">lca</span>(x,y)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure>
<h2 id="Day4：选数"><a href="#Day4：选数" class="headerlink" title="Day4：选数"></a>Day4：选数</h2><p>链接：<a href="http://oj.daimayuan.top/problem/456">传送门</a></p>
<h3 id="题意简述：-2"><a href="#题意简述：-2" class="headerlink" title="题意简述："></a>题意简述：</h3><p>给定$n$个数，从中选出若干个数，满足其和为$n$的倍数。</p>
<h3 id="范围：-2"><a href="#范围：-2" class="headerlink" title="范围："></a>范围：</h3><p>$n \leq 100000,1 \leq a_i \leq 10^9$</p>
<h3 id="解法：-3"><a href="#解法：-3" class="headerlink" title="解法："></a>解法：</h3><p>很明显的一点是一个数膜$n$的范围是$[0,n-1]$这$n$种数，我们先把数组求个前缀和后膜$n$，现在考虑两种情况：</p>
<ol>
<li>有两个值相同的情况</li>
<li>值为$[0,n-1]$每个值</li>
</ol>
<p>第2种情况很好搞，直接找0的地方输出就行。第1种情况就是找到两个相同值之后，输出它们中间的值，因为在膜$n$的剩余系下减法具有分配律。</p>
<h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">map &lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">        s[i] %= n;</span><br><span class="line">    &#125;</span><br><span class="line">    mp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(mp.<span class="built_in">count</span>(s[i])) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i - mp[s[i]]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = mp[s[i]] + <span class="number">1</span>;j &lt;= i;j ++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> mp[s[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day5：序列操作"><a href="#Day5：序列操作" class="headerlink" title="Day5：序列操作"></a>Day5：序列操作</h2><p>链接：<a href="http://oj.daimayuan.top/problem/452">传送门</a></p>
<h3 id="题目简述："><a href="#题目简述：" class="headerlink" title="题目简述："></a>题目简述：</h3><p>给定一个长度为$n$的序列，支持单点修改和整体将小于$x$的数字修改为$x$。</p>
<h3 id="范围：-3"><a href="#范围：-3" class="headerlink" title="范围："></a>范围：</h3><p>$n,q \leq 10^6,a_i \leq 10^9$</p>
<h3 id="解法：-4"><a href="#解法：-4" class="headerlink" title="解法："></a>解法：</h3><p>一开始本来想写线段树来着，但是看这个题是整体修改，就感觉应该是可以线性做，且$1 \leq n \leq 10^6$。</p>
<p>然后我们考虑这个操作，在后面的1操作可以覆盖前面的1、2操作，后面的2操作也可以覆盖小的，那么不妨将操作倒过来，每个2操作记max，每个1操作和当前的max取max后打标记即可。</p>
<h3 id="代码：-4"><a href="#代码：-4" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">int</span> op;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;t[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.id &gt; b.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> vis[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> mx;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> op;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;op);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">            t[i].op = <span class="number">1</span>;</span><br><span class="line">            t[i].id = i;</span><br><span class="line">            t[i].x = x;</span><br><span class="line">            t[i].y = y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;y);</span><br><span class="line">            t[i].op = <span class="number">2</span>;</span><br><span class="line">            t[i].id = i;</span><br><span class="line">            t[i].y = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(t + <span class="number">1</span>,t + n + <span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(t[i].op == <span class="number">2</span>) &#123;</span><br><span class="line">            mx = <span class="built_in">max</span>(mx,t[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> x = t[i].x;</span><br><span class="line">            <span class="type">int</span> y = t[i].y;</span><br><span class="line">            <span class="keyword">if</span>(!f[x]) &#123;</span><br><span class="line">                f[x] = <span class="built_in">max</span>(y,mx);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!f[i]) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,<span class="built_in">max</span>(a[i],mx));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day6：数数"><a href="#Day6：数数" class="headerlink" title="Day6：数数"></a>Day6：数数</h2><h3 id="题意简述：-3"><a href="#题意简述：-3" class="headerlink" title="题意简述："></a>题意简述：</h3><p>给定$n$长数组$A$，$q$次询问区间不大于某个数的个数。</p>
<h3 id="范围：-4"><a href="#范围：-4" class="headerlink" title="范围："></a>范围：</h3><p>$n \leq 10^5,q \leq 10^5,a_i \leq 10^9$</p>
<h3 id="解法：-5"><a href="#解法：-5" class="headerlink" title="解法："></a>解法：</h3><p>主席树求区间k大，离散化之后维护下标。</p>
<h3 id="代码：-5"><a href="#代码：-5" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> lch,rch;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">&#125;t[N * <span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> rt[N];</span><br><span class="line"><span class="type">int</span> idx;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; v,ans;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">lower_bound</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),x) - v.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> &amp;rt)</span> </span>&#123;</span><br><span class="line">    rt = ++ idx;</span><br><span class="line">    t[rt].sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,t[rt].lch);</span><br><span class="line">    <span class="built_in">build</span>(mid + <span class="number">1</span>,r,t[rt].rch);   </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> &amp;rt,<span class="type">int</span> old,<span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    rt = ++idx;</span><br><span class="line">    t[rt] = t[old];</span><br><span class="line">    t[rt].sum ++;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p &lt;= mid) <span class="built_in">insert</span>(l,mid,t[rt].lch,t[old].lch,p);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">insert</span>(mid + <span class="number">1</span>,r,t[rt].rch,t[old].rch,p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> ql,<span class="type">int</span> qr,<span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        <span class="keyword">return</span> t[qr].sum - t[ql].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p &lt;= mid) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query</span>(l,mid,t[ql].lch,t[qr].lch,p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        res += t[t[qr].lch].sum - t[t[ql].lch].sum;</span><br><span class="line">        res += <span class="built_in">query</span>(mid + <span class="number">1</span>,r,t[ql].rch,t[qr].rch,p);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> cas;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) &#123;</span><br><span class="line">        ++cas;</span><br><span class="line">        idx = <span class="number">0</span>;v.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">            v.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">        v.<span class="built_in">erase</span>(<span class="built_in">unique</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>()),v.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,n,rt[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">            <span class="built_in">insert</span>(<span class="number">1</span>,n,rt[i],rt[i - <span class="number">1</span>],<span class="built_in">get</span>(a[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m --) &#123;</span><br><span class="line">            <span class="type">int</span> l,r,h;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;l,&amp;r,&amp;h);</span><br><span class="line">            <span class="type">int</span> k = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),h) - v.<span class="built_in">begin</span>();</span><br><span class="line">            <span class="keyword">if</span>(!k) &#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(<span class="built_in">query</span>(<span class="number">1</span>,n,rt[l - <span class="number">1</span>],rt[r],k));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> k : ans) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day7：Minimum-Or-Spanning-Tree"><a href="#Day7：Minimum-Or-Spanning-Tree" class="headerlink" title="Day7：Minimum Or Spanning  Tree"></a>Day7：Minimum Or Spanning  Tree</h2><p>链接：<a href="http://oj.daimayuan.top/course/10/problem/454">传送门</a></p>
<h3 id="题意简述：-4"><a href="#题意简述：-4" class="headerlink" title="题意简述："></a>题意简述：</h3><p>给定一个图，求最小生成树，权值定义为所有边权的按位或 。</p>
<h3 id="范围：-5"><a href="#范围：-5" class="headerlink" title="范围："></a>范围：</h3><p>$n,m \leq 4 \times 10^5$</p>
<h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>枚举二进制下30位，对于每一个1判断能否可行即可。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">4e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x == f[x] ? x : f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    a = <span class="built_in">find</span>(a);</span><br><span class="line">    b = <span class="built_in">find</span>(b);</span><br><span class="line">    <span class="keyword">if</span>(a != b) &#123;</span><br><span class="line">        f[b] = a;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> w = e[i].w;</span><br><span class="line">        <span class="keyword">if</span>((w|x) == x) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">merge</span>(e[i].a,e[i].b)) cnt ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt == n - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        e[i].a = a;</span><br><span class="line">        e[i].b = b;</span><br><span class="line">        e[i].w = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(e + <span class="number">1</span>,e + m + <span class="number">1</span>,cmp);</span><br><span class="line">    <span class="type">int</span> ans = (<span class="number">1</span> &lt;&lt; <span class="number">30</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>;i &gt;= <span class="number">0</span>; i --) &#123;</span><br><span class="line">        ans ^= (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">check</span>(ans)) &#123;</span><br><span class="line">            ans ^= (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day8：摘桃子"><a href="#Day8：摘桃子" class="headerlink" title="Day8：摘桃子"></a>Day8：摘桃子</h2><p>链接：<a href="http://oj.daimayuan.top/problem/466">传送门</a></p>
<h3 id="题意简述-1"><a href="#题意简述-1" class="headerlink" title="题意简述"></a>题意简述</h3><p>给定$n$和$a_i$，求有多少种$l,r$满足$sum_r - sum_{l - 1} \; \% \; k = r - l + 1$。</p>
<h3 id="范围-1"><a href="#范围-1" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 2 \times 10^5,1 \leq k \leq 10^9,1 \leq a_i \leq 10^9$</p>
<h3 id="解法：-6"><a href="#解法：-6" class="headerlink" title="解法："></a>解法：</h3><p>将式子变换一下：</p>
<script type="math/tex; mode=display">
sum_r - r = sum_{l - 1} - (l - 1) \; (mod \; k)</script><p>这样的话，，处理出所有的$sum_i - i$，之后对于每个$i$找出有多少个$l$满足即可。</p>
<h3 id="代码：-6"><a href="#代码：-6" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line">map &lt;ll,<span class="type">int</span>&gt; f;</span><br><span class="line">ll s[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="type">int</span> l,r;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        s[i] = (s[i - <span class="number">1</span>] + x - <span class="number">1</span>) % k;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="number">0</span>) ans ++;</span><br><span class="line">        <span class="keyword">if</span>(++ r - l + <span class="number">1</span> &gt; k) f[s[l ++]] --;</span><br><span class="line">        ans += f[s[i]];</span><br><span class="line">        f[s[i]] ++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day9：路径计数2"><a href="#Day9：路径计数2" class="headerlink" title="Day9：路径计数2"></a>Day9：路径计数2</h2><p>链接：<a href="http://oj.daimayuan.top/problem/467">传送门</a></p>
<h3 id="题意简述-2"><a href="#题意简述-2" class="headerlink" title="题意简述"></a>题意简述</h3><p>给定一个$n \times n$的网格，有$m$个障碍，求从$(1,1) -&gt; (n,n)$的方案数是多少？</p>
<h3 id="范围-2"><a href="#范围-2" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 10^6,m \leq 3000$</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>从$m \leq 3000$下手想，考虑从左上角到右下点的所有路径为：</p>
<script type="math/tex; mode=display">
C_{n + m - 2,n - 1}</script><p>那么，若中间有一个点$(x,y)$障碍，那么路径条数为总路径减不合法路径</p>
<script type="math/tex; mode=display">
C_{x + y - 2,x - 1} * C(n - x + n - y,n - x)</script><p>记到第$i$个点的合法路径数为$f_i$，那么</p>
<script type="math/tex; mode=display">
f_i = all - \sum_{j = 1}^{m}f_j \times now</script><p>最后$f_m$为答案。</p>
<p>注意，我们可以将$(n,m)$记为一个障碍点。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">int</span> fc[M &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> ifc[M &lt;&lt; <span class="number">1</span>];</span><br><span class="line">ll f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pow_mod</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>) res = <span class="number">1ll</span> * res * a % mod;</span><br><span class="line">        a = <span class="number">1ll</span> * a * a % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    fc[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; <span class="number">2</span> * M; i ++) &#123;</span><br><span class="line">        fc[i] = <span class="number">1ll</span> * fc[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    ifc[<span class="number">2</span> * M - <span class="number">1</span>] = <span class="built_in">pow_mod</span>(fc[<span class="number">2</span> * M - <span class="number">1</span>],mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> * M - <span class="number">1</span>;i &gt;= <span class="number">1</span>;i --) &#123;</span><br><span class="line">        ifc[i - <span class="number">1</span>] = <span class="number">1ll</span> * ifc[i] * i % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span> <span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1ll</span> * fc[n] % mod * ifc[m] % mod * ifc[n - m] % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;d[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x + a.y &lt; b.x + b.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m;    </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        d[i].x = x;</span><br><span class="line">        d[i].y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    m ++;</span><br><span class="line">    d[m].x = n;</span><br><span class="line">    d[m].y = n;</span><br><span class="line">    <span class="built_in">sort</span>(d + <span class="number">1</span>,d + m + <span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="built_in">C</span>(d[i].x + d[i].y - <span class="number">2</span>,d[i].x - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m; j ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i != j <span class="keyword">and</span> d[j].x &lt;= d[i].x <span class="keyword">and</span> d[j].y &lt;= d[i].y) &#123;</span><br><span class="line">                res = ((res - ((<span class="number">1ll</span> * f[j] * <span class="built_in">C</span>(d[i].x - d[j].x + d[i].y - d[j].y,d[i].x - d[j].x) % mod)) % mod) + mod) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f[i] = res;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[m] % mod &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day10：函数求和"><a href="#Day10：函数求和" class="headerlink" title="Day10：函数求和"></a>Day10：函数求和</h2><p>链接：<a href="http://oj.daimayuan.top/course/10/problem/468">传送门</a></p>
<h3 id="题意简述-3"><a href="#题意简述-3" class="headerlink" title="题意简述"></a>题意简述</h3><p>求$\sum_{i = 0}^{2^k-1}f(i)$，其中$f_i$表示满足$a_i \&amp; x \neq a_i$的最小的$i$，若不存在则$f_i = 0$。</p>
<h3 id="范围-3"><a href="#范围-3" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 100,k \leq 60$</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>其实可以直接$O(nk)$做，考虑$a_i \&amp; x = a_i$有多少种情况？</p>
<ol>
<li>对于某一位的1，那么另一个数也必须为1</li>
<li>对于某一位的0，另一个数的这一位可以为任何数。</li>
</ol>
<p>组合计数即可。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> a[<span class="number">110</span>];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pow_mod</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>) res = <span class="number">1ll</span> * res * a % mod;</span><br><span class="line">        a = <span class="number">1ll</span> * a * a % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">read</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> q = <span class="number">0</span>,f = <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>)f = - <span class="number">1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        q = q * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> q * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    bitset &lt;64&gt; bt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        bitset &lt;64&gt; <span class="built_in">a</span>(<span class="built_in">read</span>());</span><br><span class="line">        <span class="type">int</span> c1 = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> c0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; k; j ++) &#123;</span><br><span class="line">            c1 += ((!bt[j]) &amp;&amp; a[j]);</span><br><span class="line">            c0 += (!(bt[j] || a[j]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c1) &#123;</span><br><span class="line">            ans = (ans + <span class="number">1ll</span> * (<span class="number">1ll</span> * i * (<span class="built_in">pow_mod</span>(<span class="number">2</span>,c1) - <span class="number">1</span>) % mod) % mod * (<span class="built_in">pow_mod</span>(<span class="number">2</span>,c0) % mod) % mod + mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        bt |= a;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day11：XOR-Inverse"><a href="#Day11：XOR-Inverse" class="headerlink" title="Day11：XOR Inverse"></a>Day11：XOR Inverse</h2><p>链接：<a href="http://oj.daimayuan.top/problem/497">传送门</a></p>
<h3 id="题意简述-4"><a href="#题意简述-4" class="headerlink" title="题意简述"></a>题意简述</h3><p>给定一个长度为$n$的数组$a$，你需要求一个中最小的非负整数$x$，满足$b_i = a_i \; xor \; x$且$b$数组逆序对最小。</p>
<h3 id="范围-4"><a href="#范围-4" class="headerlink" title="范围"></a>范围</h3><p>$1 \leq n \leq 3\times 10^5,0 \leq a_i \leq 10^9$</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>一看这种就像是字典树…</p>
<p>将所有数字都插入进去之后，对于一个节点来说，如果只有一个分支，那么无逆序对。如果有两个，那么枚举0那一侧的，如果下标比1侧的大，那么就有逆序对，递归处理即可。</p>
<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">int</span> ch[N * <span class="number">30</span>][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> idx;</span><br><span class="line">ll cnt[<span class="number">31</span>][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; f[N * <span class="number">31</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">30</span>;i &gt;= <span class="number">0</span>;i --) &#123;</span><br><span class="line">        <span class="type">int</span> t = (x &gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!ch[pos][t]) ch[pos][t] = ++idx;</span><br><span class="line">        pos = ch[pos][t];</span><br><span class="line">        f[pos].<span class="built_in">push_back</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span> <span class="params">(<span class="type">int</span> x,<span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> lch = ch[p][<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> rch = ch[p][<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!lch <span class="keyword">and</span> !rch) <span class="keyword">return</span>;</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : f[lch]) &#123;</span><br><span class="line">        <span class="keyword">while</span>(id &lt; f[rch].<span class="built_in">size</span>() <span class="keyword">and</span> y &gt; f[rch][id]) ++ id;</span><br><span class="line">        sum += id;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt[x][<span class="number">0</span>] += sum;</span><br><span class="line">    cnt[x][<span class="number">1</span>] += <span class="number">1ll</span> * f[lch].<span class="built_in">size</span>() * f[rch].<span class="built_in">size</span>() - sum;</span><br><span class="line">    <span class="keyword">if</span>(lch) <span class="built_in">dfs</span>(x - <span class="number">1</span>,lch);</span><br><span class="line">    <span class="keyword">if</span>(rch) <span class="built_in">dfs</span>(x - <span class="number">1</span>,rch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="built_in">insert</span>(x,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">30</span>,<span class="number">0</span>);</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    ll v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">30</span>;i &gt;= <span class="number">0</span>; i --) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt[i][<span class="number">0</span>] &lt;= cnt[i][<span class="number">1</span>]) ans += cnt[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ans += cnt[i][<span class="number">1</span>];</span><br><span class="line">            v ^= (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; v &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day12：Closest-Equals"><a href="#Day12：Closest-Equals" class="headerlink" title="Day12：Closest Equals"></a>Day12：Closest Equals</h2><p>链接：<a href="http://oj.daimayuan.top/problem/469">传送门</a></p>
<h3 id="题意简述-5"><a href="#题意简述-5" class="headerlink" title="题意简述"></a>题意简述</h3><p>给定一个序列，询问区间中两个相同的值最近的距离是多少？</p>
<h3 id="范围-5"><a href="#范围-5" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 5 \times 10^5,a_i \leq 10^9$</p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>首先离散化，将询问按照右端点排序。</p>
<p>记一个$pre_i$数组表示$a_i$的上一个出现位置，查询到$a_i$时如果$pre_i$有数字，那么改为$i - pre_i$表示距离，之后就是区间查询最小值。</p>
<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_q</span> &#123;</span><br><span class="line">    <span class="type">int</span> l;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> pre[N];</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line">vector &lt;_q&gt; q[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">int</span> mn = INF;</span><br><span class="line">&#125;t[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    t[rt].mn = <span class="built_in">min</span>(t[ch].mn,t[ch + <span class="number">1</span>].mn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">    t[rt].l = l;</span><br><span class="line">    t[rt].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">build</span>(mid + <span class="number">1</span>,r,rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span> <span class="params">(<span class="type">int</span> rt,<span class="type">int</span> p,<span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[rt].l == t[rt].r) &#123;</span><br><span class="line">        t[rt].mn = v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (t[rt].l + t[rt].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p &lt;= mid) &#123;</span><br><span class="line">        <span class="built_in">modify</span>(ch,p,v);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">modify</span>(ch + <span class="number">1</span>,p,v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; l &lt;&lt; &#x27; &#x27; &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">if</span>(t[rt].l == l <span class="keyword">and</span> t[rt].r == r) &#123;</span><br><span class="line">        <span class="keyword">return</span> t[rt].mn;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = (t[rt].l + t[rt].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ans = INF;</span><br><span class="line">    <span class="type">int</span> ch = rt &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &lt;= mid) &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans,<span class="built_in">query</span>(l,r,ch));</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(l &gt; mid) &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans,<span class="built_in">query</span>(l,r,ch + <span class="number">1</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans,<span class="built_in">min</span>(<span class="built_in">query</span>(l,mid,ch),<span class="built_in">query</span>(mid + <span class="number">1</span>,r,ch + <span class="number">1</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>,b + n + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> nn = <span class="built_in">unique</span>(b + <span class="number">1</span>,b + n + <span class="number">1</span>) - b - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) &#123;</span><br><span class="line">        a[i] = <span class="built_in">lower_bound</span>(b + <span class="number">1</span>,b + nn + <span class="number">1</span>,a[i]) - b;</span><br><span class="line">        pre[i] = p[a[i]];</span><br><span class="line">        p[a[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;l,&amp;r);</span><br><span class="line">        q[r].<span class="built_in">push_back</span>((_q)&#123;l,i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(pre[i]) &#123;</span><br><span class="line">            <span class="built_in">modify</span>(<span class="number">1</span>,pre[i],i - pre[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; q[i].<span class="built_in">size</span>();j ++) &#123;</span><br><span class="line">            ans[q[i][j].id] = <span class="built_in">query</span>(q[i][j].l,i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(ans[i] &gt; (<span class="number">0x3f3f3f3f</span> / <span class="number">2</span>)) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day13：CCPC-Harbin-2021-G-Damaged-Bicycle"><a href="#Day13：CCPC-Harbin-2021-G-Damaged-Bicycle" class="headerlink" title="Day13：CCPC Harbin 2021 G, Damaged Bicycle"></a>Day13：CCPC Harbin 2021 G, Damaged Bicycle</h2><p>链接：<a href="http://oj.daimayuan.top/problem/380">传送门</a></p>
<h3 id="题意简述-6"><a href="#题意简述-6" class="headerlink" title="题意简述"></a>题意简述</h3><p>校园可以被看成$n$个点，$m$条无向边的图，其中第i条边的长度是$w_i$。你的宿舍在1号点，教学楼在n号点，你想从宿舍去教学楼。你的走路速度是每秒t，骑车速度是每秒r。根据共享单车app，校园内一共有k个停车点。第i个停车点在ai点，但是有${p_i} \over {100}$的概率，车可能是坏的。但是你只有到达$a_i$点，然后扫描二维码之后才能知道第i辆车是不是好的。如果车是好的，那就可以骑到终点。</p>
<p>问你最优策略下，你最小的到达终点的期望时间是多少。如果到达不了n号点，输出<code>-1</code>。</p>
<h3 id="范围-6"><a href="#范围-6" class="headerlink" title="范围"></a>范围</h3><p>$n,m \leq 10^5,k \leq 18$</p>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>设$f[S][u]$表示使用过的单车状态为$S$，当前在点$u$，到达终点的期望时间。</p>
<p>根据题意转移即可，最短路径使用迪杰斯特拉，记搜即可。</p>
<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = INT_MAX;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> to;</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt; (node a,node b)&#123;<span class="keyword">return</span> a.w&gt;b.w;&#125;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &gt; (node a,node b)&#123;<span class="keyword">return</span> a.w&lt;b.w;&#125;</span><br><span class="line">vector &lt;node&gt; e[N];</span><br><span class="line">priority_queue &lt;node&gt; q;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">30</span>][N];</span><br><span class="line"><span class="type">double</span> f[N][<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span> dis[<span class="number">30</span>][N];</span><br><span class="line"><span class="type">int</span> t,r,n,m,k;</span><br><span class="line"><span class="type">double</span> p[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dij</span> <span class="params">(<span class="type">int</span> p,<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; p &lt;&lt; &#x27; &#x27; &lt;&lt; u &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        dis[p][i] = INF;</span><br><span class="line">    &#125;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;u,<span class="number">0</span>&#125;);</span><br><span class="line">    dis[p][u] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        node u = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(vis[p][u.to]) <span class="keyword">continue</span>;</span><br><span class="line">        dis[p][u.to] = u.w;</span><br><span class="line">        vis[p][u.to] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> y : e[u.to]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[p][y.to] &gt; dis[p][u.to] + y.w) &#123;</span><br><span class="line">                dis[p][y.to] = dis[p][u.to] + y.w;</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;y.to,dis[p][y.to]&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dfs</span> <span class="params">(<span class="type">int</span> st,<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[st][u]) <span class="keyword">return</span> f[st][u];</span><br><span class="line">    <span class="type">double</span> tmp = <span class="number">1.0</span> * p[u] * dis[u][n] / t + (<span class="number">1</span> - p[u]) * dis[u][n] / r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= k; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st &amp; (<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>))) <span class="keyword">continue</span>;</span><br><span class="line">        tmp = <span class="built_in">min</span>(tmp,<span class="number">1.0</span> * (<span class="number">1</span> - p[u]) * dis[u][n] / r + p[u] * (<span class="number">1.0</span> * dis[u][a[i]] / t + <span class="built_in">dfs</span>(st | (<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>)),i)));   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[st][u] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; t &gt;&gt; r &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> u,v,w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">        e[u].<span class="built_in">pb</span>(&#123;v,w&#125;);</span><br><span class="line">        e[v].<span class="built_in">pb</span>(&#123;u,w&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= k; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        <span class="type">int</span> tt;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;tt);</span><br><span class="line">        p[i] = <span class="number">1.0</span> * tt / <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">dij</span>(i,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dij</span>(<span class="number">19</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">dij</span>(<span class="number">20</span>,n);</span><br><span class="line">    p[<span class="number">19</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(dis[<span class="number">19</span>][n] == INF) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">19</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6lf\n&quot;</span>,f[<span class="number">0</span>][<span class="number">19</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day14：拆方块"><a href="#Day14：拆方块" class="headerlink" title="Day14：拆方块"></a>Day14：拆方块</h2><p>链接：<a href="http://oj.daimayuan.top/course/10/problem/501">传送门</a></p>
<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定每个地方的方块，每次清楚只能清除“边界方块”，求最少多少次操作所有方块会消失？</p>
<h3 id="范围-7"><a href="#范围-7" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 10^5,a_i \leq 10^9$</p>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>我们不妨把每次的消失看成一个有方向的消失，比如说每次消失一个轮廓线，那这样的话维护一个从左到右的最少消失次数和从右到左的最少消失次数，然后枚举每个点统计答案即可。</p>
<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l[N];</span><br><span class="line"><span class="type">int</span> r[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	l[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">		l[i] = <span class="built_in">min</span>(l[i - <span class="number">1</span>] + <span class="number">1</span>,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	r[n] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = n - <span class="number">1</span>;i &gt;= <span class="number">1</span>; i --) &#123;</span><br><span class="line">		r[i] = <span class="built_in">min</span>(r[i + <span class="number">1</span>] + <span class="number">1</span>,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++) &#123;</span><br><span class="line">		ans = <span class="built_in">max</span>(ans,<span class="built_in">min</span>(l[i],r[i]));</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day15：连续子序列"><a href="#Day15：连续子序列" class="headerlink" title="Day15：连续子序列"></a>Day15：连续子序列</h2><p>链接：<a href="http://oj.daimayuan.top/problem/504">传送门</a></p>
<h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为$n$的序列，找到一组指标集$p_m$使得$a_i - a_{i - 1}  = 1,i  \in p$，求出最大的$m$和最小答案的子序列。</p>
<h3 id="范围-8"><a href="#范围-8" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 200000,1 \leq a_i \leq 10^9$</p>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>维护值域，对于字典序最小可以通过维护起始数值得到。</p>
<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,a[N],m,m_a;</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;pre_a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="type">int</span> a; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="type">int</span> now_m=pre_a[a<span class="number">-1</span>]+<span class="number">1</span>,now_m_a=a-now_m+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(now_m&gt;m || (now_m==m &amp;&amp; now_m_a&lt;m_a))&#123;</span><br><span class="line">            m=now_m;</span><br><span class="line">            m_a=now_m_a;</span><br><span class="line">        &#125;</span><br><span class="line">        pre_a[a]=now_m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;++i) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,m_a+i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day16：工作安排"><a href="#Day16：工作安排" class="headerlink" title="Day16：工作安排"></a>Day16：工作安排</h2><p>链接：<a href="http://oj.daimayuan.top/problem/503">传送门</a></p>
<h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>见题</p>
<h3 id="范围-9"><a href="#范围-9" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 10^5,d_i,p_i \leq 10^9$</p>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>优先队列题，先按照截止时间进行工作，但是会发现可能有价值高却不能做的，这个时候进行撤销操作即可。</p>
<h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> d first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> p second</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line"><span class="type">int</span> n,cnt;</span><br><span class="line">PII s[N];</span><br><span class="line">LL ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;s[i].d,&amp;s[i].p);</span><br><span class="line">	<span class="built_in">sort</span>(s+<span class="number">1</span>,s+<span class="number">1</span>+n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(cnt&gt;=s[i].d)&#123;</span><br><span class="line">		<span class="keyword">if</span>(q.<span class="built_in">empty</span>() || (-q.<span class="built_in">top</span>())&gt;s[i].p) <span class="keyword">continue</span>;</span><br><span class="line">			ans+=q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>(); --cnt;</span><br><span class="line">		&#125;</span><br><span class="line">		q.<span class="built_in">push</span>(-s[i].p); ++cnt; ans+=s[i].p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Day17：三角果计数"><a href="#Day17：三角果计数" class="headerlink" title="Day17：三角果计数"></a>Day17：三角果计数</h2><p>链接：<a href="http://oj.daimayuan.top/problem/505">传送门</a></p>
<h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个$n$个节点的树，求有多少个无序三元组$(a,b,c)$满足两两之间的最短路径距离构成三角形？</p>
<h3 id="范围-10"><a href="#范围-10" class="headerlink" title="范围"></a>范围</h3><p>$n \leq 10^5,w \leq 10^5$</p>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>会有两种形式的答案：</p>
<ol>
<li>三个节点都在$x$的子节点</li>
<li>有两个是子节点，一个是父节点</li>
</ol>
<p>那么设$f_{x,j}$表示从$x$为根的子树中选择几个子树中的节点的方案数，那么：</p>
<script type="math/tex; mode=display">
    f[x][j] += f[x][j - 1] * siz[v]</script><p>答案就是：$\sum_{x} f[x][3] + f[x][2] * (n - siz[x])$</p>
<h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb(x) push_back(x)</span></span><br><span class="line">vector &lt;<span class="type">int</span>&gt; e[N];</span><br><span class="line"><span class="type">int</span> siz[N];</span><br><span class="line">ll f[N][<span class="number">4</span>];</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    siz[x] = f[x][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; e[x].<span class="built_in">size</span>();i ++) &#123;</span><br><span class="line">        <span class="type">int</span> y = e[x][i];</span><br><span class="line">        <span class="keyword">if</span> (y == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(y,x);</span><br><span class="line">        siz[x] += siz[y];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">3</span>;j &gt;= <span class="number">1</span>; j --) &#123;</span><br><span class="line">            f[x][j] += f[x][j - <span class="number">1</span>] * siz[y];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans += f[x][<span class="number">3</span>] + f[x][<span class="number">2</span>] * (n - siz[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> u,v,w;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        e[u].<span class="built_in">pb</span>(v);</span><br><span class="line">        e[v].<span class="built_in">pb</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ACM</category>
        <category>2022 Namomo Camp</category>
      </categories>
      <tags>
        <tag>Segment Tree</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning Summary</title>
    <url>/2022-02-24-Machine-Learning-Summary.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh,there's something wrong.Check and try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="20fad04f45ef74475896a5644dba46a4ca12c530f21481cc994a900c1589f27e">66740834d64ef9f31f5fe3f08882fdc3cbd4e70c9ef2b90c53b2cabed7ca4aebaef1786995530e49d637e238f7166bc78ea6b25e9ca79a0bf3c30e20df1bb6025fafd2b9e4904d41fc7c3c75a9a5a53592ef131ba95572416e4895ed08ca3183c564aeee249ccaabe4d1b0b738c3c6007e6b43d7e41e4fcb73e1d93744d71446f4dea2a556095cab54ba8240f0d75d1789095c95aeab1a90fd25348d9829213788f03e07b15b2b9f9929125aa855b8caeb447152da723dc8bb49900f1b7209d653ad67b05ef78567da7421a6de2bc07a29ec0744e7bbf916a4a86e613abeab92f6e165a3a6be0cf24ed0c3fbe6b340ed</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Probability,2E</title>
    <url>/2022-02-23-Introduction-to-Probability-2E.html</url>
    <content><![CDATA[<h1 id="《Introduction-to-Probability》2E"><a href="#《Introduction-to-Probability》2E" class="headerlink" title=" 《Introduction to Probability》2E"></a><center> 《Introduction to Probability》2E</center></h1><span id="more"></span>
<h2 id="Chap1"><a href="#Chap1" class="headerlink" title="Chap1"></a>Chap1</h2><p><a href="https://www.cnblogs.com/Allorkiya/articles/15750155.html">Chap1</a></p>
<h2 id="Chap2"><a href="#Chap2" class="headerlink" title="Chap2"></a>Chap2</h2><p><a href="https://www.cnblogs.com/Allorkiya/articles/15769121.html">Chap2</a></p>
<h2 id="Chap3"><a href="#Chap3" class="headerlink" title="Chap3"></a>Chap3</h2><p><a href="https://www.cnblogs.com/Allorkiya/articles/15773043.html">Chap3</a></p>
<h2 id="Chap4"><a href="#Chap4" class="headerlink" title="Chap4"></a>Chap4</h2><p><a href="https://www.cnblogs.com/Allorkiya/articles/15776771.html">Chap4</a></p>
<h2 id="Chap5"><a href="#Chap5" class="headerlink" title="Chap5"></a>Chap5</h2><p><a href="https://www.cnblogs.com/Allorkiya/articles/15781866.html">Chap5</a></p>
<h2 id="Chap6"><a href="#Chap6" class="headerlink" title="Chap6"></a>Chap6</h2><p><a href="https://www.cnblogs.com/Allorkiya/articles/15835178.html">Chap6</a></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Probability</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Probability</tag>
        <tag>Math</tag>
      </tags>
  </entry>
  <entry>
    <title>Game on Sum</title>
    <url>/2022-03-19-Game-on-Sum.html</url>
    <content><![CDATA[<h1 id="Game-on-Sum"><a href="#Game-on-Sum" class="headerlink" title="Game on Sum"></a><center>Game on Sum</center></h1><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个游戏，A最大化B最小化，B可以选择添加或减少，但是必须加$m$次，问游戏最终得分。</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$1 \leq T \leq 10^5,1 \leq n \leq 10^6,\sum n \leq 10^6$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>$f[n][m]$表示当前还有$n$轮，$m$个加的情况的答案。</p>
<p>那么</p>
<script type="math/tex; mode=display">
f[i][j] = \frac{f[i - 1][j] + f[i - 1][j - 1]}{2}</script><p>当两边同时乘$2^n$的时候转化成：</p>
<script type="math/tex; mode=display">
2^nf[n][m] = 2^{n - 1}f[n - 1][m] + 2^{n - 1}f[n - 1][m - 1]</script><p>令$g[n][m] = 2^nf[n][m]$</p>
<p>那么：</p>
<script type="math/tex; mode=display">
    g[n][m] = g[n - 1][m] + g[n - 1][m - 1]</script><p>那么只要找到一个$(i,i)$点再乘上从$(i + 1,i)$到$(n,m)$的方案数：$C_{n -i - 1}^{m - i}$</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">ll fc[N];</span><br><span class="line">ll inv[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pow_mod</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(b) &#123;</span><br><span class="line">		<span class="keyword">if</span>(b &amp; <span class="number">1</span>) res = <span class="number">1ll</span> * res * a  % mod;</span><br><span class="line">		a = <span class="number">1ll</span> * a * a % mod;</span><br><span class="line">		b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">	fc[<span class="number">0</span>] = fc[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	inv[<span class="number">0</span>] = inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt; N;i ++) &#123;</span><br><span class="line">		fc[i] = fc[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">		inv[i] = (mod - mod / i) % mod * inv[mod % i] % mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; N;i ++) &#123;</span><br><span class="line">		inv[i] = inv[i - <span class="number">1</span>] * inv[i] % mod;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(n &lt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> fc[n] * inv[m] % mod * inv[n - m] % mod;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">init</span> ();</span><br><span class="line">	<span class="type">int</span> T;</span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	<span class="keyword">while</span>(T --) &#123;</span><br><span class="line">		<span class="type">int</span> n,m,k;</span><br><span class="line">		cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">		<span class="keyword">if</span>(n == m) &#123;</span><br><span class="line">			cout &lt;&lt;<span class="number">1ll</span> *  m * k % mod &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			ll ans = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m; i ++) &#123;</span><br><span class="line">				ans = (ans + <span class="number">1ll</span> * i * <span class="built_in">C</span>(n - i - <span class="number">1</span>,m - i) % mod * <span class="built_in">pow_mod</span>(<span class="built_in">pow_mod</span>(<span class="number">2</span>,n - i),mod - <span class="number">2</span>) % mod) % mod;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			cout &lt;&lt; ((ans + mod) * k) % mod &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>Combinatorial mathematics</category>
      </categories>
      <tags>
        <tag>Combinatorial mathematics</tag>
        <tag>Codeforces</tag>
      </tags>
  </entry>
  <entry>
    <title>概率论趣题</title>
    <url>/2022-03-10-%E6%A6%82%E7%8E%87%E8%AE%BA%E8%B6%A3%E9%A2%98.html</url>
    <content><![CDATA[<h1 id="概率论趣题"><a href="#概率论趣题" class="headerlink" title="概率论趣题"></a><center>概率论趣题</center></h1><span id="more"></span>
<h2 id="邦费罗尼不等式——Chap1"><a href="#邦费罗尼不等式——Chap1" class="headerlink" title="邦费罗尼不等式——Chap1"></a>邦费罗尼不等式——Chap1</h2><script type="math/tex; mode=display">
P(A_1 \cap A_2 \cap \dots \cap A_n) \geq P(A_1) + \dots + P(A_n) - (n - 1)</script><p>证明运用德摩根定律即可。</p>
<h2 id="容斥恒等式——Chap1"><a href="#容斥恒等式——Chap1" class="headerlink" title="容斥恒等式——Chap1"></a>容斥恒等式——Chap1</h2><script type="math/tex; mode=display">
P(\cup_{k = 1}^{n}A_k) = \sum_{i \in S_1}P(A_i) - \sum_{(i_1,i_2) \in S_2}P(A_{i_1} \cap A_{i_2}) + \dots + (-1)^{n - 1}P(\cap_{k = 1}^{n}A_k)</script><h2 id="弱者利用策略胜利——Chap1"><a href="#弱者利用策略胜利——Chap1" class="headerlink" title="弱者利用策略胜利——Chap1"></a>弱者利用策略胜利——Chap1</h2><p>A准备进行两局下棋比赛，每局有三种结果：赢、输、平局，如果两局之后的积分相等，那么一直打下去直到一方赢一局。</p>
<p>A有两种下棋风格：</p>
<ol>
<li>进攻性：赢$p_w$，输$1-p_w$</li>
<li>保守性：平$p_d$，输$1 - p_d$</li>
</ol>
<p>在两局之后采用进攻性，前两局任意两种风格均可。</p>
<p>问：若$p_w &lt; \frac{1}{2}$则A均是游戏弱者。当采用策略：只要分数领先，就采用保守风格，其他情况均进攻；A会有大于50%的获胜机会，如何解释（依赖于$p_w,p_d$的值）？</p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Probability</category>
      </categories>
      <tags>
        <tag>Probability</tag>
        <tag>Math</tag>
      </tags>
  </entry>
  <entry>
    <title>Infinite Set</title>
    <url>/2022-03-10-Infinite-Set.html</url>
    <content><![CDATA[<h1 id="Infinite-Set"><a href="#Infinite-Set" class="headerlink" title="Infinite Set"></a><center>Infinite Set</center></h1><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个无限集合$S$满足：</p>
<p>1.包含$A$序列</p>
<p>2.对于每个$x \in S$,$y = 2x + 1 \in S$</p>
<p>3.对于每个$x \in S,y = 4x \in S$</p>
<p>求出小于$2^p$的数字个数对$10^9 + 7$取模</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$n , p \leq 2 \times 10^5$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>可以看到，2、3操作就是相当于：$x &lt;&lt; 1 | 1,x &lt;&lt; 2$</p>
<p>因此可以考虑设$f_i$表示二进制最高位$i$的满足条件的数字有多少？</p>
<p>那么：</p>
<script type="math/tex; mode=display">
f_{i + 1} += f_i \\
f_{i + 2} += f_i</script><p>但是，你需要将现有的$A$中去重，复杂度$O(p)$</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line">vector &lt;<span class="type">int</span>&gt; v;</span><br><span class="line">map &lt;<span class="type">int</span>,<span class="type">bool</span>&gt; mp;</span><br><span class="line">ll f[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x % <span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            x /= <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">if</span>(mp[x]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            x = (x - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(mp[x]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cut</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        cnt ++;</span><br><span class="line">        x &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[cnt] ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,p;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        mp[a[i]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>,a + n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(a[i])) &#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x : v) <span class="built_in">cut</span>(x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= p; i ++) &#123;</span><br><span class="line">        f[i + <span class="number">1</span>] = (f[i + <span class="number">1</span>] + f[i]) % mod;</span><br><span class="line">        f[i + <span class="number">2</span>] = (f[i + <span class="number">2</span>] + f[i]) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= p;i ++) &#123;</span><br><span class="line">        ans = (ans + f[i]) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>dp</category>
        <category>二进制dp</category>
      </categories>
      <tags>
        <tag>二进制dp</tag>
      </tags>
  </entry>
  <entry>
    <title>Namomo Subsequence</title>
    <url>/2022-03-08-Namomo-Subsequence.html</url>
    <content><![CDATA[<h1 id="2020-ECF-A-Namomo-Subsequence"><a href="#2020-ECF-A-Namomo-Subsequence" class="headerlink" title=" 2020 ECF A Namomo Subsequence "></a><center> 2020 ECF A Namomo Subsequence </center></h1><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个字符串，求有多少个形如$ABCDCD$的子序列，对$998244353$取模</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$n \leq 1000000$，字符集$|S| \leq 62$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>我们考虑只需要枚举C，那么答案就是$AB$的个数乘$DCD$的个数，考虑$AB$的个数可以通过容斥来算，维护每个字符的前缀和计算即可。CD也同理，维护$DCD$数组，正常计算即可。</p>
<p>PS：需要常数写的比较小，能少取模就少取，感谢大佬！</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">65</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line">map &lt;<span class="type">char</span> ,<span class="type">int</span>&gt; mp;</span><br><span class="line">ll f[M][M][<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> c[N][M];</span><br><span class="line">ll tt[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pow_mod</span> <span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>) res = <span class="number">1ll</span> * res * a % mod;</span><br><span class="line">        a = <span class="number">1ll</span> * a * a % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;++i) &#123;</span><br><span class="line">        mp[i + <span class="string">&#x27;a&#x27;</span>] = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>; ++ i) &#123;</span><br><span class="line">        mp[i + <span class="string">&#x27;A&#x27;</span>] = <span class="number">26</span> + <span class="number">1</span> + i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= <span class="number">9</span>; ++ i) &#123;</span><br><span class="line">        mp[i + <span class="string">&#x27;0&#x27;</span>] = <span class="number">52</span> + i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> n = s.<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; ++ i) &#123;</span><br><span class="line">        a[i] = mp[s[i - <span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">62</span>;++ j) &#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">        c[i][a[i]] ++;</span><br><span class="line">    &#125;</span><br><span class="line">    ll two = <span class="built_in">pow_mod</span>(<span class="number">2</span>,mod - <span class="number">2</span>) % mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; -- i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">62</span>; ++ j)</span><br><span class="line">            tt[i] += (ll)c[i - <span class="number">1</span>][j] * (c[i - <span class="number">1</span>][j] - <span class="number">1</span>);</span><br><span class="line">        tt[i] = tt[i] % mod * two % mod;</span><br><span class="line">        <span class="type">int</span> tmp0 = two * (i - <span class="number">1</span>) % mod * (i - <span class="number">2</span>) % mod;</span><br><span class="line">        <span class="type">int</span> tmp1 = (ll)c[i - <span class="number">1</span>][a[i]] * (i - <span class="number">1</span> - c[i - <span class="number">1</span>][a[i]]) % mod;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">62</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == j) <span class="keyword">continue</span>;</span><br><span class="line">            ll tmp = f[a[i]][j][<span class="number">1</span>] % mod + mod;</span><br><span class="line">            f[a[i]][j][<span class="number">2</span>] += c[n][j] - c[i - <span class="number">1</span>][j];</span><br><span class="line">            f[j][a[i]][<span class="number">1</span>] += f[j][a[i]][<span class="number">2</span>];</span><br><span class="line">            ans += ( tmp0 - (tt[i] + tmp1 + (ll)c[i - <span class="number">1</span>][j] * (i - <span class="number">1</span> - c[i - <span class="number">1</span>][j]) - (ll)c[i - <span class="number">1</span>][a[i]] * c[i - <span class="number">1</span>][j])) % mod * tmp % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (ans % mod + mod) % mod &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>dp</category>
        <category>计数dp</category>
      </categories>
      <tags>
        <tag>计数dp</tag>
        <tag>容斥原理</tag>
      </tags>
  </entry>
  <entry>
    <title>ACM模板</title>
    <url>/2022-03-04-ACM%E6%A8%A1%E6%9D%BF.html</url>
    <content><![CDATA[<h1 id="Allorkiya’s-ACM"><a href="#Allorkiya’s-ACM" class="headerlink" title=" Allorkiya’s ACM "></a><center> Allorkiya’s ACM </center></h1><span id="more"></span>
<h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><h3 id="Exgcd"><a href="#Exgcd" class="headerlink" title="Exgcd"></a>Exgcd</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*求最小正整数解*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x,y,m,n,L;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>) &#123;</span><br><span class="line">        x = <span class="number">1</span>,y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> r = <span class="built_in">exgcd</span>(b,a % b,x,y);</span><br><span class="line">        <span class="type">int</span> t = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = t - (a / b) * y;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y &gt;&gt; m &gt;&gt; n &gt;&gt; L;</span><br><span class="line">    <span class="type">int</span> a = <span class="built_in">abs</span>(m - n);</span><br><span class="line">    <span class="type">int</span> b = L;</span><br><span class="line">    <span class="type">int</span> c = m &gt; n ? y - x : x - y;</span><br><span class="line">    <span class="type">int</span> p,q;</span><br><span class="line">    <span class="type">int</span> d = <span class="built_in">exgcd</span>(a,b,p,q);</span><br><span class="line">    <span class="keyword">if</span>(c % d) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        p = p * c / d;</span><br><span class="line">        <span class="type">int</span> t = b / d;</span><br><span class="line">        p = (p % t + t) % t;</span><br><span class="line">        cout &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,p;</span><br><span class="line">ll inv[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p;</span><br><span class="line">    inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n; ++i) &#123;</span><br><span class="line">        inv[i] = ((p - <span class="number">1ll</span> * (p / i)) * inv[p % i]) % p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,inv[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Excrt"><a href="#Excrt" class="headerlink" title="Excrt"></a>Excrt</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">x = r_i (mod p_i)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(b == <span class="number">0</span>) <span class="keyword">return</span> x = <span class="number">1</span>,y = <span class="number">0</span>,a;</span><br><span class="line">	<span class="type">int</span> r = <span class="built_in">exgcd</span>(b,a % b,x,y);</span><br><span class="line">	<span class="type">int</span> t = x;</span><br><span class="line">	x = y;</span><br><span class="line">	y = t - (a / b) * y;</span><br><span class="line">	<span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lcm</span> <span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a / <span class="built_in">gcd</span>(a,b) * b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ExCRT</span> <span class="params">(<span class="type">int</span> r[],<span class="type">int</span> p[],<span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> M = p[<span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> ans = r[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= k; ++i) &#123;</span><br><span class="line">		<span class="type">int</span> X0,Y0;</span><br><span class="line">		<span class="type">int</span> c = r[i] - ans;</span><br><span class="line">		<span class="type">int</span> g = <span class="built_in">exgcd</span>(M,p[i],X0,Y0);</span><br><span class="line">		<span class="keyword">if</span>(c % g != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		X0 = (<span class="type">__int128_t</span>) X0 * (c / g) % (p[i] / g);</span><br><span class="line">		ans = ans + X0 * M;</span><br><span class="line">		M = <span class="built_in">lcm</span>(M,p[i]);</span><br><span class="line">		ans = ((ans % M) + M) % M;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; ++i) &#123;</span><br><span class="line">		cin &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="built_in">ExCRT</span>(b,a,n) &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>模板</category>
      </categories>
      <tags>
        <tag>模板</tag>
      </tags>
  </entry>
  <entry>
    <title>Werewolves</title>
    <url>/2022-03-04-Werewolves.html</url>
    <content><![CDATA[<h1 id="Werewolves"><a href="#Werewolves" class="headerlink" title=" Werewolves "></a><center> Werewolves </center></h1><span id="more"></span>
<p>链接：<a href="https://vjudge.net/contest/482141#problem/C">传送门</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个树，每个节点有一个颜色，询问有多少个连通块满足主要颜色的数量严格大于$num \over 2$？</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$n \leq 3000$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>比较显然的事情就是可以枚举每个颜色，判断当前颜色有多少个，最后再加和即可。</p>
<p>对于每个当前颜色设为1，其他颜色设为-1，只需要计算连通块权值大于0的个数即可。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"><span class="type">int</span> c[N];</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; v[N];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb(x) push_back(x)</span></span><br><span class="line"><span class="type">int</span> L[N];</span><br><span class="line"><span class="type">int</span> R[N];</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> tmp[N][N &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa,<span class="type">int</span> col)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= (res &lt;&lt; <span class="number">1</span>);i ++) &#123;</span><br><span class="line">        f[x][i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ret ;</span><br><span class="line">    <span class="keyword">if</span>(c[x] != col) ret = res - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> ret = res + <span class="number">1</span>;</span><br><span class="line">    L[x] = <span class="built_in">min</span>(res,ret);</span><br><span class="line">    R[x] = <span class="built_in">max</span>(res,ret);</span><br><span class="line">    f[x][ret] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(y,x,col);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= (res &lt;&lt; <span class="number">1</span>);i ++) &#123;</span><br><span class="line">            tmp[x][i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = L[y];i &lt;= R[y];i ++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = L[x];j &lt;= R[x];j ++) &#123;</span><br><span class="line">                <span class="type">int</span> t = i + j - res;</span><br><span class="line">                <span class="keyword">if</span>(t &gt;= <span class="number">0</span> <span class="keyword">and</span> t &lt;= (res &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line">                    tmp[x][t] += f[y][i] * f[x][j];</span><br><span class="line">                    tmp[x][t] %= mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        L[x] = <span class="built_in">max</span>(<span class="number">0ll</span>,L[x] + L[y] - res);</span><br><span class="line">        R[x] = <span class="built_in">min</span>((res &lt;&lt; <span class="number">1</span>),R[x] + R[y] - res);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= (res &lt;&lt; <span class="number">1</span>);i ++) &#123;</span><br><span class="line">            f[x][i] += tmp[x][i];</span><br><span class="line">            f[x][i] %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = res + <span class="number">1</span>;i &lt;= (res &lt;&lt; <span class="number">1</span>);i ++) &#123;</span><br><span class="line">        ans += f[x][i];</span><br><span class="line">        ans %= mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        cin &gt;&gt; c[i];</span><br><span class="line">        ++cnt[c[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld %lld&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        v[x].<span class="built_in">pb</span>(y);</span><br><span class="line">        v[y].<span class="built_in">pb</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>;k &lt;= n; k ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt[k] &lt;= <span class="number">1</span>) ans += cnt[k];</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            res = cnt[k];</span><br><span class="line">            <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>,k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>dp</category>
        <category>树形dp</category>
      </categories>
      <tags>
        <tag>树形dp</tag>
        <tag>SEERC</tag>
      </tags>
  </entry>
  <entry>
    <title>Paint</title>
    <url>/2022-03-04-Paint.html</url>
    <content><![CDATA[<h1 id="Paint"><a href="#Paint" class="headerlink" title=" Paint "></a><center> Paint </center></h1><span id="more"></span>
<p>链接：<a href="https://vjudge.net/contest/482141#problem/D">传送门</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个颜色序列，每次能够选择一段涂成某种颜色，请问将$[1,n]$涂成相同颜色的最少步数是多少？</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$n \leq 3000,t \leq 3000,a_i \leq n$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>设$f_{i,j}$表示将$[i,j]$填成$j$颜色的最小步数，答案就为$f_{1,n}$</p>
<p>注意连续的一段没有贡献，因此将其缩成一个点。</p>
<p>转移：</p>
<script type="math/tex; mode=display">
f_{i,j} = min(f_{i,j - 1},f_{i + 1,j}) + 1 \\ 
f_{i,j} = min(f_{i,k} + f_{k + 1,j}) \\</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="type">int</span> vis[N];</span><br><span class="line"><span class="type">int</span> pre[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) vis[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(p &lt;= n) &#123;</span><br><span class="line">            <span class="type">int</span> t = p;</span><br><span class="line">            <span class="keyword">while</span> (t &lt;= n <span class="keyword">and</span> b[t] == b[p]) &#123;</span><br><span class="line">                t ++;</span><br><span class="line">            &#125;</span><br><span class="line">            a[++cnt] = b[p];</span><br><span class="line">            p = t;</span><br><span class="line">        &#125;<span class="comment">//找连续段</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= cnt; i ++) &#123;</span><br><span class="line">            pre[i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[a[i]]) &#123;</span><br><span class="line">                pre[i] = vis[a[i]];</span><br><span class="line">            &#125;</span><br><span class="line">            vis[a[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= cnt; i ++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= cnt; j ++) &#123;</span><br><span class="line">                f[i][j] = INF;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= cnt; i ++) &#123;</span><br><span class="line">            f[i][i] = f[i + <span class="number">1</span>][i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">2</span>;k &lt;= cnt;k ++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i + k - <span class="number">1</span> &lt;= cnt;i ++) &#123;</span><br><span class="line">                <span class="type">int</span> j = i + k - <span class="number">1</span>;</span><br><span class="line">                f[i][j] = <span class="built_in">min</span>(f[i][j - <span class="number">1</span>],f[i + <span class="number">1</span>][j]) + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> t = pre[j];t &gt;= i;t = pre[t]) &#123;</span><br><span class="line">                    f[i][j] = <span class="built_in">min</span>(f[i][j],f[i][t] + f[t + <span class="number">1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; f[<span class="number">1</span>][cnt] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>dp</category>
        <category>区间dp</category>
      </categories>
      <tags>
        <tag>Codeforces</tag>
        <tag>区间dp</tag>
      </tags>
  </entry>
  <entry>
    <title>Towers</title>
    <url>/2022-03-04-Towers.html</url>
    <content><![CDATA[<h1 id="Towers"><a href="#Towers" class="headerlink" title=" Towers "></a><center> Towers </center></h1><center> Codeforces 1637F Towers </center>

<span id="more"></span>
<p>链接：<a href="https://vjudge.net/contest/482141#problem/B">传送门</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个$n$个节点的树，需要构造一些节点的权值，满足对于任何一个点$x$，都有经过点的一条链，满足$min(w_u,w_v) &gt;= w_x$</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$n \leq 2 \times 10^5,h_i \leq 10^9$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>考虑一种显然的构造方法，先找一个最大的点，两端构造两个点的权值等于最大点权值，之后对于子树每一个点重复类似过程。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; v[N];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb(x) push_back(x)</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> h[N];</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> mx1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mx2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> ret = <span class="built_in">dfs</span>(y,x);</span><br><span class="line">        <span class="keyword">if</span>(ret &gt; mx1) &#123;</span><br><span class="line">            mx2 = mx1;</span><br><span class="line">            mx1 = ret;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ret &gt; mx2) &#123;</span><br><span class="line">            mx2 = ret;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fa) &#123;</span><br><span class="line">        ans += <span class="built_in">max</span>(<span class="number">0</span>,h[x] - mx1);</span><br><span class="line">        mx1 = <span class="built_in">max</span>(mx1,h[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> ans += <span class="built_in">max</span>(<span class="number">0</span>,h[x] - mx1) + <span class="built_in">max</span>(<span class="number">0</span>,h[x] - mx2);</span><br><span class="line">    <span class="keyword">return</span> mx1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;h[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        v[x].<span class="built_in">pb</span>(y);</span><br><span class="line">        v[y].<span class="built_in">pb</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mx = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> pos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(h[i] &gt; mx) &#123;</span><br><span class="line">            mx = h[i];</span><br><span class="line">            pos = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(pos,<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>思维</category>
      </categories>
      <tags>
        <tag>Codeforces</tag>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title>Outer space invaders</title>
    <url>/2022-03-04-Outer-space-invaders.html</url>
    <content><![CDATA[<h1 id="CERC2014-Outer-space-invaders"><a href="#CERC2014-Outer-space-invaders" class="headerlink" title="[CERC2014] Outer space invaders "></a><center>[CERC2014] Outer space invaders </center></h1><span id="more"></span>
<p>链接：<a href="https://vjudge.net/contest/482141#problem/E">传送门</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定$n$个外星人，第$i$个会在$a_i$出现，$b_i$之前必须消灭，距离为$d_i$。每次攻击可以消灭半径为$r$内的敌人，并且消耗$r$单位的能源，问消灭所有的外星人最少小号多少能源？</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$n \leq 300,a_i,b_i,d_i \leq 10000$</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>区间dp，设$f_{i,j}$表示消灭出现和消灭时间范围都在$[i,j]$中的敌人的最少能源，考虑怎么转移：</p>
<p>找到区间范围内距离最远的敌人，这样保证是可以最优的。之后将不包含该敌人的两个区间合并，注意时间的离散化！</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">610</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">read</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> q = <span class="number">0</span>,f= <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        q = q * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> q * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">int</span> d[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span>  <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) &#123;</span><br><span class="line">        <span class="type">int</span> n = <span class="built_in">read</span>();</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">            a[i] = <span class="built_in">read</span>(),b[i] = <span class="built_in">read</span>(),d[i] = <span class="built_in">read</span>();</span><br><span class="line">            q[++cnt] = a[i];</span><br><span class="line">            q[++cnt] = b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(q + <span class="number">1</span>,q + cnt + <span class="number">1</span>);</span><br><span class="line">        cnt = <span class="built_in">unique</span>(q + <span class="number">1</span>,q + cnt + <span class="number">1</span>) - q - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">            a[i] = <span class="built_in">lower_bound</span>(q + <span class="number">1</span>,q + cnt + <span class="number">1</span>,a[i]) - q;</span><br><span class="line">            b[i] = <span class="built_in">lower_bound</span>(q + <span class="number">1</span>,q + cnt + <span class="number">1</span>,b[i]) - q;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= cnt; i ++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt;= cnt; j ++) &#123;</span><br><span class="line">                f[i][j] = INF;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">1</span>;l &lt;= cnt;l ++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i + l - <span class="number">1</span> &lt;= cnt;i ++) &#123;</span><br><span class="line">                <span class="type">int</span> j = i + l - <span class="number">1</span>;</span><br><span class="line">                <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>;k &lt;= n; k ++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(i &lt;= a[k] <span class="keyword">and</span> b[k] &lt;= j <span class="keyword">and</span> d[k] &gt; d[x]) x = k;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(x == <span class="number">0</span>) &#123;</span><br><span class="line">                    f[i][j] = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = a[x];k &lt;= b[x];k ++) &#123;</span><br><span class="line">                    f[i][j] = <span class="built_in">min</span>(f[i][j],f[i][k - <span class="number">1</span>] + d[x] + f[k + <span class="number">1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; f[<span class="number">1</span>][cnt] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>dp</category>
        <category>区间dp</category>
      </categories>
      <tags>
        <tag>CERC</tag>
        <tag>区间dp</tag>
      </tags>
  </entry>
  <entry>
    <title>2022 Namomo Camp Week1</title>
    <url>/2022-03-01-2022-Namomo-Camp-Week1.html</url>
    <content><![CDATA[<h1 id="2022-Namomo-Camp-Week1"><a href="#2022-Namomo-Camp-Week1" class="headerlink" title=" 2022 Namomo Camp Week1"></a><center> 2022 Namomo Camp Week1</center></h1><span id="more"></span>
<h2 id="2021-ICPC-Nanjing-H-Crystalfly"><a href="#2021-ICPC-Nanjing-H-Crystalfly" class="headerlink" title="2021 ICPC Nanjing-H Crystalfly"></a>2021 ICPC Nanjing-H Crystalfly</h2><p>链接：<a href="https://allorkiya.github.io/2022-03-01-2021-ICPC-Nanjing-H-Crystalfly.html">传送门</a></p>
<h2 id="CERC2014-Outer-space-invaders"><a href="#CERC2014-Outer-space-invaders" class="headerlink" title="[CERC2014] Outer space invaders"></a>[CERC2014] Outer space invaders</h2><p>链接：<a href="https://allorkiya.github.io/2022-03-04-Outer-space-invaders.html#more">传送门</a></p>
<h2 id="Towers"><a href="#Towers" class="headerlink" title="Towers"></a>Towers</h2><p>链接：<a href="https://allorkiya.github.io/2022-03-04-Towers.html#more">传送门</a></p>
<h2 id="Paint"><a href="#Paint" class="headerlink" title="Paint"></a>Paint</h2><p>链接：<a href="https://allorkiya.github.io/2022-03-04-Paint.html#more">传送门</a></p>
<h2 id="Werewolves"><a href="#Werewolves" class="headerlink" title="Werewolves"></a>Werewolves</h2><p>链接：<a href="https://allorkiya.github.io/2022-03-04-Werewolves.html#more">传送门</a></p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>2022 Namomo Camp</category>
      </categories>
      <tags>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>Prime Distance</title>
    <url>/2022-03-01-Prime-Distance.html</url>
    <content><![CDATA[<h1 id="Prime-Distance"><a href="#Prime-Distance" class="headerlink" title=" Prime Distance "></a><center> Prime Distance </center></h1><span id="more"></span>
<p>链接：<a href="https://ac.nowcoder.com/acm/contest/21094/C">传送门</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个区间，求出区间内素数最大距离、最小距离以及它们的数分别是多少？</p>
<h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>$T \leq 1000;l,r \leq 10^9,(r - l) \leq 10^6$</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>筛一下1e5之内的素数，枚举每个素数在$[l,r]$内的倍数筛掉，之后求最值即可。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"><span class="type">int</span> primes[N];</span><br><span class="line"><span class="type">bool</span> np[N];</span><br><span class="line"><span class="type">bool</span> vis[N];</span><br><span class="line"><span class="type">int</span> d[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sieve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(np,<span class="number">0</span>,<span class="keyword">sizeof</span> np);</span><br><span class="line">    np[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= <span class="number">100000</span>;i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!np[i]) &#123;</span><br><span class="line">            primes[++tot] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= tot <span class="keyword">and</span> i * primes[j] &lt;= <span class="number">100000</span>;j ++) &#123;</span><br><span class="line">            np[i * primes[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_lr</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= tot;i ++) &#123;</span><br><span class="line">        <span class="type">int</span> p = l / primes[i];</span><br><span class="line">        <span class="keyword">while</span>(p &lt;= <span class="number">1</span>) p ++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = p * primes[i];j &lt;= r;j += primes[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(j &gt;= l) &#123;</span><br><span class="line">                vis[j - l] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(l == <span class="number">1</span>) vis[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">sieve</span> ();</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T --) &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="built_in">get_lr</span>(l,r);</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= r - l;i ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">                d[++cnt] = i + l;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;There are no adjacent primes.\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> Mx = -INF;</span><br><span class="line">            <span class="type">int</span> Mn = INF;</span><br><span class="line">            <span class="type">int</span> mnl,mnr,mxl,mxr;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt; cnt; i ++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(d[i + <span class="number">1</span>] - d[i] &gt; Mx) &#123;</span><br><span class="line">                    Mx = d[i + <span class="number">1</span>] - d[i];</span><br><span class="line">                    mxl = d[i];</span><br><span class="line">                    mxr = d[i + <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(d[i + <span class="number">1</span>] - d[i] &lt; Mn) &#123;</span><br><span class="line">                    Mn = d[i + <span class="number">1</span>] - d[i];</span><br><span class="line">                    mnl = d[i];</span><br><span class="line"></span><br><span class="line">                    mnr = d[i + <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d,%d are closest, %d,%d are most distant.\n&quot;</span>,mnl,mnr,mxl,mxr);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>Math Theory</category>
        <category>Primes Sieve</category>
      </categories>
      <tags>
        <tag>Primes Sieve</tag>
      </tags>
  </entry>
  <entry>
    <title>青蛙的约会</title>
    <url>/2022-03-01-%E9%9D%92%E8%9B%99%E7%9A%84%E7%BA%A6%E4%BC%9A.html</url>
    <content><![CDATA[<h1 id="青蛙的约会"><a href="#青蛙的约会" class="headerlink" title=" 青蛙的约会"></a><center> 青蛙的约会</center></h1><span id="more"></span>
<p>链接：<a href="https://ac.nowcoder.com/acm/contest/21094/A">传送门</a></p>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两只青蛙的地点和速度，求相遇时间，追及问题。</p>
<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><script type="math/tex; mode=display">
x + mk = y + nk (mod \; L) \\</script><p>求解最小$k$</p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x,y,m,n,L;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>) &#123;</span><br><span class="line">        x = <span class="number">1</span>,y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> r = <span class="built_in">exgcd</span>(b,a % b,x,y);</span><br><span class="line">        <span class="type">int</span> t = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = t - (a / b) * y;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y &gt;&gt; m &gt;&gt; n &gt;&gt; L;</span><br><span class="line">    <span class="type">int</span> a = <span class="built_in">abs</span>(m - n);</span><br><span class="line">    <span class="type">int</span> b = L;</span><br><span class="line">    <span class="type">int</span> c = m &gt; n ? y - x : x - y;</span><br><span class="line">    <span class="type">int</span> p,q;</span><br><span class="line">    <span class="type">int</span> d = <span class="built_in">exgcd</span>(a,b,p,q);</span><br><span class="line">    <span class="keyword">if</span>(c % d) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        p = p * c / d;</span><br><span class="line">        <span class="type">int</span> t = b / d;</span><br><span class="line">        p = (p % t + t) % t;</span><br><span class="line">        cout &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>Math Theory</category>
        <category>Exgcd</category>
      </categories>
      <tags>
        <tag>Exgcd</tag>
      </tags>
  </entry>
  <entry>
    <title>2021 ICPC Nanjing-H Crystalfly</title>
    <url>/2022-03-01-2021-ICPC-Nanjing-H-Crystalfly.html</url>
    <content><![CDATA[<h1 id="2021ICPC南京H"><a href="#2021ICPC南京H" class="headerlink" title="2021ICPC南京H"></a><center>2021ICPC南京H</center></h1><span id="more"></span>
<p>链接：<a href="https://vjudge.net/contest/482141#problem/A">传送门</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个$n$个节点的树，每个节点有权值$a_i$和消失时间$t_i$，若$t$时刻到达某个节点，其相邻节点会在$t + t_i$时刻消失，请问最大能获得多少权值？</p>
<h2 id="范围："><a href="#范围：" class="headerlink" title="范围："></a>范围：</h2><p>$\sum n \leq 10^6,1 \leq t_i \leq 3,1 \leq n \leq 10^5,1 \leq a_i \leq 10^9$</p>
<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p>这个题确实好有意思…</p>
<p>首先看过程，假设当前到了一个节点，那么它可以怎么往下走？</p>
<ol>
<li>找一个点直接下去，之后回来再分别去别的子树</li>
<li>首先去一个别的节点，返回后再选一个点往下走，返回后再去别的子树</li>
</ol>
<p>1过程贪心的想一下就是选一个最大的点往下走，之后再回来走别的，只是相邻节点无了。</p>
<p>2过程贪心的想一下就是选择一个最大的$t_i = 1/2$的点先下去，然后回来，再选一个$t_i = 3$的节点下去，再回来走别的。</p>
<p>那么考虑设计状态：</p>
<script type="math/tex; mode=display">
f_i 表示带a_i节点的子树的答案 \\
g_i 表示a_i节点已经消失的答案 \\
h_i 表示一个点被访问过之后回去父节点再访问这个节点的答案 \\</script><p>那么；</p>
<script type="math/tex; mode=display">
f_u = a_u + g_u \\ 
h_u = a_u + \sum g_v \; u \; and \; v \; is \;adjacent</script><p>答案就为：$f_1$</p>
<p>那么怎么算$g$函数？</p>
<p>考虑：</p>
<script type="math/tex; mode=display">
g_u = \begin{cases}
max\{ f_v + \sum_{y \neq v} g(y)\} = max{a_v} + \sum g(v) \\ 
max\{ f(v) + h(y) + \sum_{p \neq v 且 p \neq y} g(p)\} = max(a_v) + h(y) + \sum_{p \neq y} g(p)
\end{cases}</script><p>取决于当前节点的子节点有没有$t_i = 3$</p>
<p>维护最大值、次大值可以线性维护。</p>
<p>PS：多组数据的清空数组不要用memset！</p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">ll f[N];</span><br><span class="line">ll g[N];</span><br><span class="line">ll h[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> t[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; v[N];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb(x) push_back(x)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> mx1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mx2 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mxa = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//this</span></span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y == fa) <span class="keyword">continue</span>;</span><br><span class="line">        res += g[y];</span><br><span class="line">        mxa = <span class="built_in">max</span>(mxa,a[y]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//f = max(a_v) + \sum_g</span></span><br><span class="line">    <span class="comment">//h = a_x + </span></span><br><span class="line">    h[x] = a[x] + res;</span><br><span class="line">    g[x] = mxa + res;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y == fa <span class="keyword">or</span> t[y] != <span class="number">3</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[y] &gt; mx1) &#123;</span><br><span class="line">            mx2 = mx1;</span><br><span class="line">            mx1 = a[y];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            mx2 = <span class="built_in">max</span>(mx2,a[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> y : v[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(t[y] == <span class="number">3</span> <span class="keyword">and</span> a[y] == mx1) &#123;</span><br><span class="line">            g[x] = <span class="built_in">max</span>(g[x],mx2 + h[y] - g[y] + res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            g[x] = <span class="built_in">max</span>(g[x],mx1 + h[y] + res - g[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f[x] = a[x] + g[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        v[i].<span class="built_in">clear</span>();</span><br><span class="line">        f[i] = <span class="number">0</span>;</span><br><span class="line">        g[i] = <span class="number">0</span>;</span><br><span class="line">        h[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt; n;i ++) &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        v[x].<span class="built_in">pb</span>(y);</span><br><span class="line">        v[y].<span class="built_in">pb</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,f[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ACM</category>
        <category>dp</category>
        <category>树形dp</category>
      </categories>
      <tags>
        <tag>树形dp</tag>
        <tag>ICPC</tag>
      </tags>
  </entry>
  <entry>
    <title>XGBoost</title>
    <url>/2022-02-24-XGBoost.html</url>
    <content><![CDATA[<h1 id="XGBoost"><a href="#XGBoost" class="headerlink" title="XGBoost"></a><center>XGBoost</center></h1><p>集成算法XGBoost的学习笔记。</p>
<span id="more"></span>
<h2 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h2><p>内部实现了GBDT模型并做了诸多优化，与2016年开发。</p>
<h2 id="主要用途："><a href="#主要用途：" class="headerlink" title="主要用途："></a>主要用途：</h2><p>分类、回归、排序</p>
<h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol>
<li>简单易用</li>
<li>高效可拓展：处理大规模数据时速度快效果好</li>
<li>鲁棒性强：相对于DL模型不需要精细调参即可得到接近的结果</li>
<li>内部实现提升树模型，可以自动处理缺失值</li>
<li>精度高</li>
<li>正则化</li>
<li>可并行的近似算法</li>
</ol>
<h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><ol>
<li>相比于DL无法对时空位置建模，不能很好的处理图像、声音、文本等高维数据</li>
<li>在训练数据集合很多并且能够找到合适的DL模型时，DL的精度比XGBoost高</li>
<li>时间、空间复杂度较高</li>
</ol>
<h2 id="XGBoost原理"><a href="#XGBoost原理" class="headerlink" title="XGBoost原理"></a>XGBoost原理</h2><p>见链接：<a href="https://zhuanlan.zhihu.com/p/83901304">知乎：深入理解XGBoost</a></p>
<h2 id="XGBoost代码"><a href="#XGBoost代码" class="headerlink" title="XGBoost代码"></a>XGBoost代码</h2>]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Machine Learning</tag>
        <tag>XGBoost</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Kaggle-Titanic-Solution</title>
    <url>/2022-02-24-Kaggle-Titanic-Solution.html</url>
    <content><![CDATA[<h1 id="Titanic"><a href="#Titanic" class="headerlink" title=" Titanic "></a><center> Titanic </center></h1><p>Kaggle中入门题Titanic的解决方案。</p>
<span id="more"></span>
<h2 id="Version——1"><a href="#Version——1" class="headerlink" title="Version——1"></a>Version——1</h2><p>纪念2022年2月24日于Kaggle平台做出ML的<code>Hello World</code>题。</p>
<p><code>Scrore:77.5</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure>
<h3 id="Step-1-数据读入"><a href="#Step-1-数据读入" class="headerlink" title="Step 1.数据读入"></a>Step 1.数据读入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">&#x27;/kaggle/input/titanic/train.csv&#x27;</span>)</span><br><span class="line">test = pd.read_csv(<span class="string">&#x27;/kaggle/input/titanic/test.csv&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(train.head())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> * <span class="number">40</span>)</span><br><span class="line"><span class="built_in">print</span>(train.info())</span><br></pre></td></tr></table></figure>
<p>通过展示结果可以发现，<code>Age,Cabin,Embarked</code>列存在缺失值；并且<code>Name,Sex,Ticket,Cabin,Embarked</code>不是学习可用的数值型，需要进行数据转换。</p>
<h3 id="Step-2-数据预处理"><a href="#Step-2-数据预处理" class="headerlink" title="Step 2. 数据预处理"></a>Step 2. 数据预处理</h3><p>填充缺失值的时候需要根据缺失值的类型填充：</p>
<ul>
<li>如果数据集很大，缺失值很少，直接删除即可。</li>
<li>如果数据缺失值可能代表空值，那么用一个新的唯一地变量替代缺失值。</li>
<li>如果数据分析下来很重要，需要通过随机森林回归或线性回归等手段预测。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = (<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">train[<span class="string">&#x27;Age&#x27;</span>].hist(bins = <span class="number">80</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Age&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Num&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">train.boxplot(column = <span class="string">&#x27;Age&#x27;</span>,showfliers = <span class="literal">False</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/2022-02-24-Kaggle-Titanic-Solution/1.png" class title="年龄分布图">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fct = sns.FacetGrid(train,hue = <span class="string">&#x27;Survived&#x27;</span>,aspect = <span class="number">5</span>)</span><br><span class="line">fct.<span class="built_in">map</span>(sns.kdeplot,<span class="string">&#x27;Age&#x27;</span>,shade = <span class="literal">True</span>)</span><br><span class="line">fct.<span class="built_in">set</span>(xlim = (<span class="number">0</span>,train[<span class="string">&#x27;Age&#x27;</span>].<span class="built_in">max</span>()))</span><br><span class="line">fct.add_legend()</span><br></pre></td></tr></table></figure>
<p>使用seaborn库绘制不同年龄下存存活和死亡的人的概率密度（核密度估计）。</p>
<p>这里解释下，核密度估计大概就是分布在某个点附近的点的多少，可以大概地看出来每个点地人数有多少。</p>
<img src="/2022-02-24-Kaggle-Titanic-Solution/2.png" class title="不同年龄生存情况的核密度估计图">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = (<span class="number">18</span>,<span class="number">4</span>))</span><br><span class="line">new_df = train.dropna(how = <span class="string">&#x27;any&#x27;</span>,subset = [<span class="string">&#x27;Survived&#x27;</span>,<span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line">new_df[<span class="string">&quot;Age_int&quot;</span>] = new_df[<span class="string">&quot;Age&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line"><span class="built_in">print</span>(new_df.info())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> * <span class="number">40</span>)</span><br><span class="line">aver = new_df[[<span class="string">&quot;Age_int&quot;</span>,<span class="string">&quot;Survived&quot;</span>]].groupby([<span class="string">&#x27;Age_int&#x27;</span>],as_index = <span class="literal">False</span>).mean()</span><br><span class="line">sns.barplot(x = <span class="string">&#x27;Age_int&#x27;</span>,y = <span class="string">&#x27;Survived&#x27;</span>,data = aver)</span><br></pre></td></tr></table></figure>
<img src="/2022-02-24-Kaggle-Titanic-Solution/3.png" class title="不同年龄活下来的人的占比">
<p>因此可以看出<code>Age</code>对于学习有着很大的影响，因此使用随机森林预测缺失值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">limit = [<span class="number">0</span>,<span class="number">12</span>,<span class="number">18</span>,<span class="number">64</span>,<span class="number">99</span>]</span><br><span class="line">train[<span class="string">&#x27;Age_Group&#x27;</span>] = pd.cut(train[<span class="string">&#x27;Age&#x27;</span>],limit)</span><br><span class="line">class_age = train.groupby(<span class="string">&#x27;Age_Group&#x27;</span>)[<span class="string">&#x27;Survived&#x27;</span>].mean()</span><br><span class="line">class_age</span><br><span class="line">class_age.plot(kind = <span class="string">&#x27;bar&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/2022-02-24-Kaggle-Titanic-Solution/4.png" class title="不同年龄段的平均存活率">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br><span class="line">age_df = train[[<span class="string">&#x27;Age&#x27;</span>,<span class="string">&#x27;Survived&#x27;</span>,<span class="string">&#x27;Fare&#x27;</span>,<span class="string">&#x27;Parch&#x27;</span>,<span class="string">&#x27;SibSp&#x27;</span>,<span class="string">&#x27;Pclass&#x27;</span>]]</span><br><span class="line">age_df_notnull = age_df.loc[(train[<span class="string">&#x27;Age&#x27;</span>].notnull())]</span><br><span class="line">age_df_isnull = age_df.loc[(train[<span class="string">&#x27;Age&#x27;</span>].isnull())]</span><br><span class="line">X = age_df_notnull.values[:,<span class="number">1</span>:] <span class="comment">#use others to predict Age</span></span><br><span class="line">Y = age_df_notnull.values[:,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">RFR = RandomForestRegressor(n_estimators = <span class="number">1000</span>,n_jobs = -<span class="number">1</span>)</span><br><span class="line">RFR.fit(X,Y)</span><br><span class="line">predict_Age = RFR.predict(age_df_isnull.values[:,<span class="number">1</span>:]) <span class="comment">#to predict NULL_AGE row </span></span><br><span class="line">train.loc[train[<span class="string">&#x27;Age&#x27;</span>].isnull(),[<span class="string">&#x27;Age&#x27;</span>]] = predict_Age</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></table></figure>
<p><code>Age</code>缺失值填充完毕，接下来是<code>Cabin,Embarked</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.Cabin[train.Cabin.isnull()] = <span class="string">&#x27;NO&#x27;</span></span><br><span class="line">train.Embarked[train.Embarked.isnull()] = train.Embarked.dropna().mode().values</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></table></figure>
<p>数据转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.loc[train[<span class="string">&#x27;Sex&#x27;</span>] == <span class="string">&quot;female&quot;</span>,<span class="string">&#x27;Sex&#x27;</span>] = <span class="number">0</span></span><br><span class="line">train.loc[train[<span class="string">&#x27;Sex&#x27;</span>] == <span class="string">&quot;male&quot;</span>,<span class="string">&#x27;Sex&#x27;</span>] = <span class="number">1</span></span><br><span class="line">train.loc[train[<span class="string">&#x27;Embarked&#x27;</span>] == <span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;Embarked&#x27;</span>] = <span class="number">0</span></span><br><span class="line">train.loc[train[<span class="string">&#x27;Embarked&#x27;</span>] == <span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;Embarked&#x27;</span>] = <span class="number">1</span></span><br><span class="line">train.loc[train[<span class="string">&#x27;Embarked&#x27;</span>] == <span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;Embarked&#x27;</span>] = <span class="number">2</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></table></figure>
<p>选出两个新的特征：家庭成员数量以及名字长度</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train[<span class="string">&#x27;family_size&#x27;</span>] = train[<span class="string">&#x27;SibSp&#x27;</span>] + train[<span class="string">&#x27;Parch&#x27;</span>] + <span class="number">1</span></span><br><span class="line">train[<span class="string">&#x27;name_length&#x27;</span>] = train[<span class="string">&#x27;Name&#x27;</span>].apply(<span class="keyword">lambda</span> x : <span class="built_in">len</span>(x))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></table></figure>
<p>使用<code>SelectKBest</code>选出4个特征，并打分，选出4个最好的特征。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectKBest</span><br><span class="line">base = [<span class="string">&#x27;Pclass&#x27;</span>,<span class="string">&#x27;Sex&#x27;</span>,<span class="string">&#x27;Age&#x27;</span>,<span class="string">&#x27;SibSp&#x27;</span>,<span class="string">&#x27;Parch&#x27;</span>,<span class="string">&#x27;Fare&#x27;</span>,<span class="string">&#x27;Embarked&#x27;</span>,<span class="string">&#x27;family_size&#x27;</span>,<span class="string">&#x27;name_length&#x27;</span>]</span><br><span class="line">selector = SelectKBest(k = <span class="number">4</span>)</span><br><span class="line">selector.fit(train[base],train[<span class="string">&#x27;Survived&#x27;</span>])</span><br><span class="line">scores = -np.log10(selector.pvalues_)</span><br><span class="line">plt.bar(<span class="built_in">range</span>(<span class="built_in">len</span>(base)),scores)</span><br><span class="line">plt.xticks(<span class="built_in">range</span>(<span class="built_in">len</span>(base)),base,rotation = <span class="string">&#x27;vertical&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/2022-02-24-Kaggle-Titanic-Solution/5.png" class title="指标得分情况">
<h3 id="Step-3-XGBoost学习"><a href="#Step-3-XGBoost学习" class="headerlink" title="Step 3. XGBoost学习"></a>Step 3. XGBoost学习</h3><p>选<code>`Pclass,Sex,Fare and name_length</code>这四个变量，使用集成算法<code>XGBoost</code>进行预测。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X_train = train[[<span class="string">&#x27;Pclass&#x27;</span>,<span class="string">&#x27;Sex&#x27;</span>,<span class="string">&#x27;Fare&#x27;</span>,<span class="string">&#x27;name_length&#x27;</span>]]</span><br><span class="line">Y_train = train[[<span class="string">&#x27;Survived&#x27;</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test.info()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test.loc[test[<span class="string">&#x27;Sex&#x27;</span>] == <span class="string">&#x27;male&#x27;</span>,[<span class="string">&#x27;Sex&#x27;</span>]] = <span class="number">1</span></span><br><span class="line">test.loc[test[<span class="string">&#x27;Sex&#x27;</span>] == <span class="string">&#x27;female&#x27;</span>,[<span class="string">&#x27;Sex&#x27;</span>]] = <span class="number">0</span></span><br><span class="line">test[<span class="string">&#x27;name_length&#x27;</span>] = test[<span class="string">&#x27;SibSp&#x27;</span>] + test[<span class="string">&#x27;Parch&#x27;</span>] + <span class="number">1</span></span><br><span class="line">X_test = test[[<span class="string">&#x27;Pclass&#x27;</span>,<span class="string">&#x27;Sex&#x27;</span>,<span class="string">&#x27;Fare&#x27;</span>,<span class="string">&#x27;name_length&#x27;</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> XGBClassifier</span><br><span class="line"></span><br><span class="line">MODEL = XGBClassifier(</span><br><span class="line">    learning_rate = <span class="number">0.01</span>,</span><br><span class="line">    n_estimators = <span class="number">11</span>,</span><br><span class="line">    max_depth = <span class="number">10</span>,</span><br><span class="line">    min_child_weight = <span class="number">1</span>,</span><br><span class="line">    gamma = <span class="number">0.</span>,</span><br><span class="line">    subsample = <span class="number">1</span>,</span><br><span class="line">    colsample_btree = <span class="number">1</span>,</span><br><span class="line">    scale_pos_weight = <span class="number">1</span>,</span><br><span class="line">    random_state = <span class="number">19</span>,</span><br><span class="line">    slient = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">MODEL.fit(X_train.values,Y_train.values)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Y_pred = MODEL.predict(X_test.values)</span><br><span class="line">Output = pd.DataFrame(&#123;<span class="string">&#x27;PassengerId&#x27;</span>: test.PassengerId, <span class="string">&#x27;Survived&#x27;</span>: Y_pred&#125;)</span><br><span class="line">Output.to_csv(<span class="string">&#x27;submission.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Your submission was successfully saved!&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>Competitions</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
        <tag>Kaggle</tag>
        <tag>XGBoost</tag>
        <tag>RandomForest</tag>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
